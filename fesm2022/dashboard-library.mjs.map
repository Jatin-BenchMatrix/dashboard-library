{"version":3,"file":"dashboard-library.mjs","sources":["../../../projects/dashboard-library/src/lib/service/layout.service.ts","../../../projects/dashboard-library/src/lib/create-widget/create-widget.component.ts","../../../projects/dashboard-library/src/lib/create-widget/create-widget.component.html","../../../projects/dashboard-library/src/lib/dashboard-builder/templates/prebuilt-templates.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/data/sample-datasets.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/services/dashboard.service.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/services/widget.service.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/services/data.service.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/chart-widget/chart-widget.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/incident-trend-widget/incident-trend-widget.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/kri-breaches-widget/kri-breaches-widget.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/audit-aging-widget/audit-aging-widget.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/appetite-utilization-widget/appetite-utilization-widget.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/risk-heatmap-widget/risk-heatmap-widget.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/widget-renderer/widget-renderer.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/dashboard-canvas/dashboard-canvas.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/widget-library/widget-library.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/configuration-panel/configuration-panel.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/global-filters/global-filters.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/components/dashboard-builder/dashboard-builder.component.ts","../../../projects/dashboard-library/src/lib/dashboard-builder/models/dashboard.layout.ts","../../../projects/dashboard-library/src/public-api.ts","../../../projects/dashboard-library/src/dashboard-library.ts"],"sourcesContent":["import {computed, effect, Injectable, signal, Signal, WritableSignal} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {MenuItem} from 'primeng/api';\r\n\r\nexport type MenuMode = 'static' | 'overlay' | 'horizontal' | 'slim' | 'slim-plus' | 'reveal' | 'drawer';\r\n\r\nexport interface LayoutConfig {\r\n    preset: string;\r\n    primary: string;\r\n    surface: string | undefined | null;\r\n    darkTheme: boolean;\r\n    menuMode: MenuMode;\r\n}\r\n\r\nexport interface LayoutState {\r\n    staticMenuDesktopInactive: boolean;\r\n    overlayMenuActive: boolean;\r\n    configSidebarVisible: boolean;\r\n    staticMenuMobileActive: boolean;\r\n    menuHoverActive: boolean;\r\n    rightMenuActive: boolean;\r\n    sidebarActive: boolean;\r\n    activeMenuItem: any;\r\n    overlaySubmenuActive: boolean;\r\n    anchored: boolean;\r\n    rightMenuVisible: boolean;\r\n    searchBarActive: boolean;\r\n}\r\n\r\nexport interface MenuChangeEvent {\r\n    key: string;\r\n    routeEvent?: boolean;\r\n}\r\n\r\nexport interface TabCloseEvent {\r\n    tab: MenuItem;\r\n    index: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LayoutService {\r\n    _config: LayoutConfig = {\r\n        preset: 'Aura',\r\n        primary: 'noir',\r\n        surface: null,\r\n        darkTheme: false,\r\n        menuMode: 'static'\r\n    };\r\n\r\n    _state: LayoutState = {\r\n        staticMenuDesktopInactive: false,\r\n        overlayMenuActive: false,\r\n        rightMenuActive: false,\r\n        configSidebarVisible: false,\r\n        staticMenuMobileActive: false,\r\n        menuHoverActive: false,\r\n        sidebarActive: false,\r\n        anchored: false,\r\n        activeMenuItem: null,\r\n        overlaySubmenuActive: false,\r\n        rightMenuVisible: false,\r\n        searchBarActive: false\r\n    };\r\n\r\n    layoutConfig = signal<LayoutConfig>(this._config);\r\n\r\n    layoutState = signal<LayoutState>(this._state);\r\n\r\n    private configUpdate = new Subject<LayoutConfig>();\r\n\r\n    private overlayOpen = new Subject<any>();\r\n\r\n    private menuSource = new Subject<MenuChangeEvent>();\r\n\r\n    private resetSource = new Subject();\r\n\r\n    menuSource$ = this.menuSource.asObservable();\r\n\r\n    resetSource$ = this.resetSource.asObservable();\r\n\r\n    configUpdate$ = this.configUpdate.asObservable();\r\n\r\n    overlayOpen$ = this.overlayOpen.asObservable();\r\n\r\n    isSidebarActive: Signal<boolean> = computed(() => this.layoutState().overlayMenuActive || this.layoutState().staticMenuMobileActive || this.layoutState().overlaySubmenuActive);\r\n\r\n    isSidebarStateChanged = computed(() => {\r\n        const layoutConfig = this.layoutConfig();\r\n        return layoutConfig.menuMode === 'horizontal' || layoutConfig.menuMode === 'slim' || layoutConfig.menuMode === 'slim-plus';\r\n    });\r\n\r\n    isDarkTheme: Signal<boolean> = computed(() => this.layoutConfig().darkTheme);\r\n\r\n    isOverlay: Signal<boolean> = computed(() => this.layoutConfig().menuMode === 'overlay');\r\n\r\n    isSlim: Signal<boolean> = computed(() => this.layoutConfig().menuMode === 'slim');\r\n\r\n    isSlimPlus: Signal<boolean> = computed(() => this.layoutConfig().menuMode === 'slim-plus');\r\n\r\n    isHorizontal: Signal<boolean> = computed(() => this.layoutConfig().menuMode === 'horizontal');\r\n\r\n    transitionComplete: WritableSignal<boolean> = signal<boolean>(false);\r\n\r\n    logo = computed(() => (this.layoutConfig().darkTheme ? 'light' : 'dark'));\r\n\r\n    rightMenuVisible = computed(() => this.layoutState().rightMenuActive);\r\n\r\n    private initialized = false;\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            const config = this.layoutConfig();\r\n            if (config) {\r\n                this.onConfigUpdate();\r\n            }\r\n        });\r\n\r\n        effect(() => {\r\n            const config = this.layoutConfig();\r\n\r\n            if (!this.initialized || !config) {\r\n                this.initialized = true;\r\n                return;\r\n            }\r\n\r\n            this.handleDarkModeTransition(config);\r\n        });\r\n\r\n        effect(() => {\r\n            this.isSidebarStateChanged() && this.reset();\r\n        });\r\n    }\r\n\r\n    private handleDarkModeTransition(config: LayoutConfig): void {\r\n        if ((document as any).startViewTransition) {\r\n            this.startViewTransition(config);\r\n        } else {\r\n            this.toggleDarkMode(config);\r\n            this.onTransitionEnd();\r\n        }\r\n    }\r\n\r\n    private startViewTransition(config: LayoutConfig): void {\r\n        const transition = (document as any).startViewTransition(() => {\r\n            this.toggleDarkMode(config);\r\n        });\r\n\r\n        transition.ready\r\n            .then(() => {\r\n                this.onTransitionEnd();\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    toggleDarkMode(config?: LayoutConfig): void {\r\n        const _config = config || this.layoutConfig();\r\n        if (_config.darkTheme) {\r\n            document.documentElement.classList.add('app-dark');\r\n        } else {\r\n            document.documentElement.classList.remove('app-dark');\r\n        }\r\n    }\r\n\r\n    private onTransitionEnd() {\r\n        this.transitionComplete.set(true);\r\n        setTimeout(() => {\r\n            this.transitionComplete.set(false);\r\n        });\r\n    }\r\n\r\n    onMenuToggle() {\r\n        if (this.isOverlay()) {\r\n            this.layoutState.update((prev) => ({\r\n                ...prev,\r\n                overlayMenuActive: !this.layoutState().overlayMenuActive\r\n            }));\r\n\r\n            if (this.layoutState().overlayMenuActive) {\r\n                this.overlayOpen.next(null);\r\n            }\r\n        }\r\n\r\n        if (this.isDesktop()) {\r\n            this.layoutState.update((prev) => ({\r\n                ...prev,\r\n                staticMenuDesktopInactive: !this.layoutState().staticMenuDesktopInactive\r\n            }));\r\n        } else {\r\n            this.layoutState.update((prev) => ({\r\n                ...prev,\r\n                staticMenuMobileActive: !this.layoutState().staticMenuMobileActive\r\n            }));\r\n\r\n            if (this.layoutState().staticMenuMobileActive) {\r\n                this.overlayOpen.next(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    isDesktop() {\r\n        return window.innerWidth > 991;\r\n    }\r\n\r\n    isMobile() {\r\n        return !this.isDesktop();\r\n    }\r\n\r\n    onConfigUpdate() {\r\n        this._config = { ...this.layoutConfig() };\r\n        this.configUpdate.next(this.layoutConfig());\r\n        this.toggleDarkMode();\r\n    }\r\n\r\n    onMenuStateChange(event: MenuChangeEvent) {\r\n        this.menuSource.next(event);\r\n    }\r\n\r\n    reset() {\r\n        this.resetSource.next(true);\r\n    }\r\n\r\n    onOverlaySubmenuOpen() {\r\n        this.overlayOpen.next(null);\r\n    }\r\n\r\n    showProfileSidebar() {\r\n        this.layoutState.update((prev) => ({\r\n            ...prev,\r\n            profileSidebarVisible: true\r\n        }));\r\n    }\r\n\r\n    showConfigSidebar() {\r\n        this.layoutState.update((prev) => ({\r\n            ...prev,\r\n            configSidebarVisible: true\r\n        }));\r\n    }\r\n\r\n    hideConfigSidebar() {\r\n        this.layoutState.update((prev) => ({\r\n            ...prev,\r\n            configSidebarVisible: false\r\n        }));\r\n    }\r\n}\r\n","import { Component, type OnInit, type OnDestroy, inject } from \"@angular/core\"\r\nimport { CommonModule } from \"@angular/common\"\r\nimport { FormsModule } from \"@angular/forms\"\r\nimport { ChartModule } from \"primeng/chart\"\r\nimport { TabViewModule } from \"primeng/tabview\"\r\nimport { CardModule } from \"primeng/card\"\r\nimport { InputTextModule } from \"primeng/inputtext\"\r\nimport { DropdownModule } from \"primeng/dropdown\"\r\nimport { ButtonModule } from \"primeng/button\"\r\nimport { InputSwitchModule } from \"primeng/inputswitch\"\r\nimport { DividerModule } from \"primeng/divider\"\r\nimport { TooltipModule } from \"primeng/tooltip\"\r\nimport { ToolbarModule } from \"primeng/toolbar\"\r\nimport { type ChartConfiguration, type ChartData, type ChartType, Chart as ChartJS } from \"chart.js\"\r\nimport annotationPlugin from \"chartjs-plugin-annotation\"\r\nimport { debounceTime, Subscription } from \"rxjs\"\r\nimport { LayoutService } from \"../service/layout.service\"\r\n\r\n// Register the annotation plugin\r\nChartJS.register(annotationPlugin)\r\n\r\n// --- Interfaces based on React reference ---\r\nexport interface SeriesCfg {\r\n  id: string\r\n  label: string\r\n  field: string\r\n  type: \"area\" | \"line\" | \"bar\"\r\n  yAxis: \"left\" | \"right\"\r\n  fillOpacity?: number\r\n  color?: string\r\n}\r\n\r\nexport interface Band {\r\n  id: string\r\n  value: number\r\n  label: string\r\n  dashed?: boolean\r\n}\r\n\r\nexport interface WidgetCfg {\r\n  name: string\r\n  description: string\r\n  vizType: \"line\" | \"bar\" | \"radar\" | \"pie\" | \"area\"\r\n  dataset: string\r\n  xField: string\r\n  series: SeriesCfg[]\r\n  appetiteBands: Band[]\r\n  stacked: boolean\r\n  showLegend: boolean\r\n  showGrid: boolean\r\n  showTooltip: boolean\r\n  drilldownEnabled: boolean\r\n  drilldownTarget?: string\r\n  refresh: \"realtime\" | \"daily\" | \"monthly\"\r\n  roles: string[]\r\n}\r\n\r\n@Component({\r\n  selector: \"app-create-widget\",\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ChartModule,\r\n    TabViewModule,\r\n    CardModule,\r\n    InputTextModule,\r\n    DropdownModule,\r\n    ButtonModule,\r\n    InputSwitchModule,\r\n    DividerModule,\r\n    TooltipModule,\r\n    ToolbarModule,\r\n  ],\r\n  templateUrl: \"./create-widget.component.html\",\r\n  styleUrls: [\"./create-widget.component.scss\"],\r\n})\r\nexport class CreateWidgetComponent implements OnInit, OnDestroy {\r\n  layoutService = inject(LayoutService);\r\n\r\n  // --- Configuration State ---\r\n  widgetConfig: WidgetCfg\r\n  rolesInput = \"\"\r\n\r\n  // --- Select Options ---\r\n  vizTypeOptions: any[]\r\n  datasetOptions: any[]\r\n  refreshOptions: any[]\r\n  xAxisOptions: any[]\r\n  seriesFieldOptions: any[]\r\n  seriesTypeOptions: any[]\r\n  yAxisOptions: any[]\r\n\r\n  // --- Preview State ---\r\n  showPreview = true\r\n\r\n  // --- Chart.js Data and Options ---\r\n  chartData: ChartData = { labels: [], datasets: [] }\r\n  chartOptions: ChartConfiguration[\"options\"] = {}\r\n  chartType: ChartType = \"line\"\r\n\r\n  // --- Sample Data ---\r\n  sampleMonthlyData = [\r\n    { month: \"Jan\", residualRisk: 60, incidents: 12 },\r\n    { month: \"Feb\", residualRisk: 35, incidents: 13 },\r\n    { month: \"Mar\", residualRisk: 38, incidents: 12 },\r\n    { month: \"Apr\", residualRisk: 55, incidents: 18 },\r\n    { month: \"May\", residualRisk: 64, incidents: 17 },\r\n    { month: \"Jun\", residualRisk: 48, incidents: 18 },\r\n    { month: \"Jul\", residualRisk: 43, incidents: 19 },\r\n    { month: \"Aug\", residualRisk: 42, incidents: 9 },\r\n    { month: \"Sep\", residualRisk: 69, incidents: 15 },\r\n    { month: \"Oct\", residualRisk: 38, incidents: 16 },\r\n    { month: \"Nov\", residualRisk: 34, incidents: 12 },\r\n    { month: \"Dec\", residualRisk: 47, incidents: 11 },\r\n  ]\r\n\r\n  seriesColors: string[] = []\r\n  private subscription?: Subscription;\r\n\r\n  constructor() {\r\n    this.updateSeriesColors()\r\n    this.widgetConfig = this.getDefaultConfig()\r\n    this.rolesInput = this.widgetConfig.roles.join(\", \")\r\n\r\n    // Initialize select options\r\n    this.vizTypeOptions = [\r\n      { label: \"Area Chart\", value: \"area\" },\r\n      { label: \"Line Chart\", value: \"line\" },\r\n      { label: \"Bar Chart\", value: \"bar\" },\r\n      { label: \"Radar Chart\", value: \"radar\" },\r\n      { label: \"Pie Chart\", value: \"pie\" },\r\n    ]\r\n    this.datasetOptions = [{ label: \"Sample: Monthly Risk & Incidents\", value: \"Sample: Monthly Risk & Incidents\" }]\r\n    this.refreshOptions = [\r\n      { label: \"Real-time\", value: \"realtime\" },\r\n      { label: \"Daily\", value: \"daily\" },\r\n      { label: \"Monthly\", value: \"monthly\" },\r\n    ]\r\n    this.xAxisOptions = [\r\n      { label: \"Month\", value: \"month\" },\r\n      { label: \"Date\", value: \"date\" },\r\n      { label: \"Category\", value: \"category\" },\r\n    ]\r\n    this.seriesFieldOptions = [\r\n      { label: \"Residual Risk\", value: \"residualRisk\" },\r\n      { label: \"Incidents\", value: \"incidents\" },\r\n    ]\r\n    this.seriesTypeOptions = [\r\n      { label: \"Area\", value: \"area\" },\r\n      { label: \"Line\", value: \"line\" },\r\n      { label: \"Bar\", value: \"bar\" },\r\n    ]\r\n    this.yAxisOptions = [\r\n      { label: \"Left\", value: \"left\" },\r\n      { label: \"Right\", value: \"right\" },\r\n    ]\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateChart()\r\n    this.subscription = this.layoutService.configUpdate$.pipe(debounceTime(25)).subscribe(() => {\r\n      this.updateChart()\r\n    });\r\n  }\r\n\r\n  updateSeriesColors() {\r\n    // Use CSS variables for theme colors for series colors, matching chart-widget\r\n    const documentStyle = getComputedStyle(document.documentElement)\r\n    this.seriesColors = [\r\n      documentStyle.getPropertyValue('--p-primary-500').trim(),\r\n      documentStyle.getPropertyValue('--p-primary-600').trim(),\r\n      documentStyle.getPropertyValue('--p-indigo-400').trim(),\r\n      documentStyle.getPropertyValue('--p-purple-400').trim()\r\n    ].map(c => c || '#42A5F5') // fallback\r\n  }\r\n\r\n  getDefaultConfig(): WidgetCfg {\r\n    return {\r\n      name: \"\",\r\n      description: \"\",\r\n      vizType: \"area\",\r\n      dataset: \"Sample: Monthly Risk & Incidents\",\r\n      xField: \"month\",\r\n      series: [\r\n        {\r\n          id: \"s1\",\r\n          label: \"Residual Risk\",\r\n          field: \"residualRisk\",\r\n          type: \"area\",\r\n          yAxis: \"left\",\r\n          fillOpacity: 0.3,\r\n        },\r\n        { \r\n          id: \"s2\", \r\n          label: \"Incidents\", \r\n          field: \"incidents\", \r\n          type: \"area\", \r\n          yAxis: \"left\", \r\n          fillOpacity: 0.5, \r\n        },\r\n      ],\r\n      appetiteBands: [{ id: \"b1\", value: 80, label: \"Amber\", dashed: true }],\r\n      stacked: false,\r\n      showLegend: true,\r\n      showGrid: true,\r\n      showTooltip: true,\r\n      drilldownEnabled: true,\r\n      drilldownTarget: \"Incident Log (by month)\",\r\n      refresh: \"monthly\",\r\n      roles: [\"Risk Manager\", \"Executive\"],\r\n    }\r\n  }\r\n\r\n  chartKey = 0;\r\n\r\n  updateChart() {\r\n    this.updateSeriesColors()\r\n\r\n    // Update series colors dynamically on theme change\r\n    this.widgetConfig.series.forEach((s, index) => {\r\n      s.color = this.seriesColors[index % this.seriesColors.length]\r\n    })\r\n\r\n    let labels: any[] = []\r\n    let datasets: any[] = []\r\n\r\n    if (this.widgetConfig.vizType === \"pie\") {\r\n      // For pie, use first series\r\n      const s = this.widgetConfig.series[0]\r\n      if (s) {\r\n        labels = this.sampleMonthlyData.map((d) => d[this.widgetConfig.xField as keyof typeof d])\r\n        const data = this.sampleMonthlyData.map((d) => d[s.field as keyof typeof d])\r\n        datasets = [\r\n          {\r\n            data: data,\r\n            backgroundColor: this.seriesColors.slice(0, data.length),\r\n            hoverBackgroundColor: this.seriesColors.slice(0, data.length).map((c) => this.hexToRgba(c, 0.8)),\r\n          },\r\n        ]\r\n      }\r\n    } else {\r\n      labels = this.sampleMonthlyData.map((d) => d[this.widgetConfig.xField as keyof typeof d])\r\n      datasets = this.widgetConfig.series.map((s, index) => {\r\n        const data = this.sampleMonthlyData.map((d) => d[s.field as keyof typeof d])\r\n        const isArea =\r\n          (this.widgetConfig.vizType === \"area\" || this.widgetConfig.vizType === \"line\") && s.type === \"area\"\r\n\r\n        return {\r\n          type: this.widgetConfig.vizType === \"area\" ? \"line\" : this.widgetConfig.vizType,\r\n          label: s.label,\r\n          data: data,\r\n          borderColor: s.color || this.seriesColors[index % this.seriesColors.length],\r\n          backgroundColor: this.hexToRgba(\r\n            s.color || this.seriesColors[index % this.seriesColors.length],\r\n            s.fillOpacity || (isArea ? 0.3 : 1),\r\n          ),\r\n          fill: isArea,\r\n          yAxisID: s.yAxis,\r\n          tension: 0.4, // For smooth lines in line/area charts\r\n        }\r\n      })\r\n    }\r\n\r\n    this.chartData = { labels, datasets }\r\n    this.chartType = this.widgetConfig.vizType === \"area\" ? \"line\" : (this.widgetConfig.vizType as ChartType)\r\n    this.chartOptions = this.getChartOptions()\r\n\r\n    // Increment chartKey to force re-render on theme change\r\n    this.chartKey++\r\n  }\r\n\r\n  getChartOptions(): ChartConfiguration[\"options\"] {\r\n    const documentStyle = getComputedStyle(document.documentElement)\r\n    const textColor = (documentStyle.getPropertyValue(\"--text-color\") || \"#495057\").trim()\r\n    const textColorSecondary = (documentStyle.getPropertyValue(\"--text-color-secondary\") || textColor).trim()\r\n    const surfaceBorder = (documentStyle.getPropertyValue(\"--surface-border\") || \"#ebedef\").trim()\r\n    const tooltipBg = (documentStyle.getPropertyValue(\"--surface-800\") || \"#1f2937\").trim()\r\n\r\n    const baseOptions: any = {\r\n      maintainAspectRatio: false,\r\n      aspectRatio: 1.2,\r\n      plugins: {\r\n        legend: {\r\n          display: this.widgetConfig.showLegend,\r\n          labels: {\r\n            color: textColor,\r\n            usePointStyle: true,\r\n            padding: 16,\r\n          },\r\n        },\r\n        tooltip: {\r\n          enabled: this.widgetConfig.showTooltip,\r\n          backgroundColor: tooltipBg,\r\n          titleColor: textColor,\r\n          bodyColor: textColorSecondary,\r\n          borderColor: surfaceBorder,\r\n          borderWidth: 1,\r\n          cornerRadius: 4,\r\n        },\r\n      },\r\n    }\r\n\r\n    if (this.widgetConfig.vizType === \"pie\") {\r\n      return baseOptions\r\n    } else {\r\n      const hasRightAxis = this.widgetConfig.series.some((s) => s.yAxis === \"right\")\r\n      baseOptions.plugins.annotation = {\r\n        annotations: this.widgetConfig.appetiteBands.map((band) => ({\r\n          type: \"line\",\r\n          yMin: band.value,\r\n          yMax: band.value,\r\n          borderColor: documentStyle.getPropertyValue('--p-orange-500').trim() || \"#ff9900\",\r\n          borderWidth: 2,\r\n          borderDash: band.dashed ? [6, 6] : [],\r\n          label: {\r\n            content: band.label,\r\n            display: true,\r\n            position: \"end\",\r\n            color: textColor,\r\n            backgroundColor: tooltipBg,\r\n          },\r\n        })),\r\n      }\r\n      baseOptions.scales = {\r\n        x: {\r\n          stacked: this.widgetConfig.stacked,\r\n          ticks: { color: textColorSecondary },\r\n          grid: {\r\n            color: surfaceBorder,\r\n            display: this.widgetConfig.showGrid,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n        left: {\r\n          stacked: this.widgetConfig.stacked,\r\n          ticks: { color: textColorSecondary },\r\n          grid: {\r\n            color: surfaceBorder,\r\n            display: this.widgetConfig.showGrid,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n        ...(hasRightAxis && {\r\n          right: {\r\n            type: \"linear\",\r\n            display: true,\r\n            position: \"right\",\r\n            ticks: { color: textColorSecondary },\r\n            grid: { drawOnChartArea: false },\r\n          },\r\n        }),\r\n      }\r\n      return baseOptions\r\n    }\r\n  }\r\n\r\n  addSeries() {\r\n    const n = this.widgetConfig.series.length + 1\r\n    this.widgetConfig.series.push({\r\n      id: `s${Date.now()}`,\r\n      label: `Series ${n}`,\r\n      field: \"incidents\",\r\n      type: \"line\",\r\n      yAxis: \"left\",\r\n      color: this.seriesColors[n % this.seriesColors.length],\r\n    })\r\n    this.updateChart()\r\n  }\r\n\r\n  removeSeries(id: string) {\r\n    this.widgetConfig.series = this.widgetConfig.series.filter((s) => s.id !== id)\r\n    this.updateChart()\r\n  }\r\n\r\n  addBand() {\r\n    this.widgetConfig.appetiteBands.push({\r\n      id: `b${Date.now()}`,\r\n      value: 50,\r\n      label: \"New Band\",\r\n    })\r\n    this.updateChart()\r\n  }\r\n\r\n  removeBand(id: string) {\r\n    this.widgetConfig.appetiteBands = this.widgetConfig.appetiteBands.filter((b) => b.id !== id)\r\n    this.updateChart()\r\n  }\r\n\r\n  onRolesChange(value: string) {\r\n    this.rolesInput = value\r\n    this.widgetConfig.roles = value\r\n      .split(\",\")\r\n      .map((r) => r.trim())\r\n      .filter(Boolean)\r\n  }\r\n\r\n  saveWidget() {\r\n    console.log(\"Saving Widget Configuration:\", this.widgetConfig)\r\n    alert(\"Widget configuration saved! Check the console for details.\")\r\n  }\r\n\r\n  hexToRgba(hex: string, alpha = 1): string {\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0\r\n    if (hex.length == 4) {\r\n      r = Number.parseInt(hex[1] + hex[1], 16)\r\n      g = Number.parseInt(hex[2] + hex[2], 16)\r\n      b = Number.parseInt(hex[3] + hex[3], 16)\r\n    } else if (hex.length == 7) {\r\n      r = Number.parseInt(hex.substring(1, 3), 16)\r\n      g = Number.parseInt(hex.substring(3, 5), 16)\r\n      b = Number.parseInt(hex.substring(5, 7), 16)\r\n    }\r\n    return `rgba(${r},${g},${b},${alpha})`\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"w-full min-h-screen bg-surface\">\r\n  <!-- Header -->\r\n  <div class=\"sticky top-0 z-10 shadow-sm mb-4\">\r\n    <div class=\"flex justify-between items-center py-3\">\r\n      <!-- Left: Title -->\r\n      <div class=\"text-xl font-semibold\">Create New Widget</div>\r\n      <!-- Right: Buttons -->\r\n      <div class=\"flex items-center gap-2\">\r\n        <p-button\r\n          [label]=\"showPreview ? 'Hide Preview' : 'Show Preview'\"\r\n          [icon]=\"showPreview ? 'pi pi-eye-slash' : 'pi pi-eye'\"\r\n          styleClass=\"p-button-outlined\"\r\n          (onClick)=\"showPreview = !showPreview\">\r\n        </p-button>\r\n        <p-button label=\"Save Widget\" icon=\"pi pi-save\" (onClick)=\"saveWidget()\"></p-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Content -->\r\n  <div class=\"mx-auto max-w-full px-0 py-6 flex flex-col md:flex-row gap-8\">\r\n    <!-- Left: Config -->\r\n    <div class=\"w-full md:w-1/2 space-y-6 rounded-xl LeftConfig\">\r\n      <!-- Stepper-like tabs -->\r\n      <p-tabView (onChange)=\"updateChart()\" [scrollable]=\"true\" styleClass=\"tabview\">\r\n        <p-tabPanel header=\"1. Basics\">\r\n          <!-- Rounded card, consistent inner spacing -->\r\n          <p-card>\r\n            <ng-template pTemplate=\"header\">\r\n              <div class=\"pb-2\">\r\n                <h3 class=\"text-lg font-semibold\">Basics</h3>\r\n                <p class=\"text-xs text-muted-foreground\">Name, describe, and choose visualization type.</p>\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"grid gap-4 md:grid-cols-2\">\r\n              <div>\r\n                <label for=\"widgetName\" class=\"block font-medium mb-2\">Widget Name</label>\r\n                <input id=\"widgetName\" type=\"text\" pInputText class=\"w-full\" [(ngModel)]=\"widgetConfig.name\" placeholder=\"Residual Risk & Incidents — 12‑month trend\">\r\n              </div>\r\n              <div>\r\n                <label for=\"vizType\" class=\"block font-medium mb-2\">Visualization Type</label>\r\n                <p-dropdown id=\"vizType\" [options]=\"vizTypeOptions\" [(ngModel)]=\"widgetConfig.vizType\" optionLabel=\"label\" optionValue=\"value\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\" (onChange)=\"updateChart()\"></p-dropdown>\r\n              </div>\r\n              <div>\r\n                <label for=\"description\" class=\"block font-medium mb-2\">Description</label>\r\n                <textarea id=\"description\" rows=\"3\" pInputText class=\"w-full\" [(ngModel)]=\"widgetConfig.description\" placeholder=\"Shows residual risk scores and incident counts over 12 months, with appetite threshold bands.\"></textarea>\r\n              </div>\r\n            </div>\r\n          </p-card>\r\n        </p-tabPanel>\r\n\r\n        <p-tabPanel header=\"2. Data Source\">\r\n          <p-card>\r\n            <ng-template pTemplate=\"header\">\r\n              <div class=\"pb-2\">\r\n                <h3 class=\"text-lg font-semibold\">Data Source</h3>\r\n                <p class=\"text-xs text-muted-foreground\">Pick a dataset and optional filters. This demo uses a sample monthly dataset.</p>\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"grid gap-4 md:grid-cols-2\">\r\n              <div>\r\n                <label for=\"dataset\" class=\"block font-medium mb-2\">Dataset</label>\r\n                <p-dropdown id=\"dataset\" [options]=\"datasetOptions\" [(ngModel)]=\"widgetConfig.dataset\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\" (onChange)=\"updateChart()\"></p-dropdown>\r\n              </div>\r\n              <div>\r\n                <label for=\"refresh\" class=\"block font-medium mb-2\">Refresh</label>\r\n                <p-dropdown id=\"refresh\" [options]=\"refreshOptions\" [(ngModel)]=\"widgetConfig.refresh\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\"></p-dropdown>\r\n              </div>\r\n            </div>\r\n          </p-card>\r\n        </p-tabPanel>\r\n\r\n        <p-tabPanel header=\"3. Field Mapping\">\r\n          <p-card>\r\n            <ng-template pTemplate=\"header\">\r\n              <div class=\"pb-2\">\r\n                <h3 class=\"text-lg font-semibold\">Field Mapping</h3>\r\n                <p class=\"text-xs text-muted-foreground\">Map X axis and one or more series to numeric fields.</p>\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"grid gap-4 md:grid-cols-3 items-end\">\r\n              <div>\r\n                <label for=\"xAxis\" class=\"block font-medium mb-2\">X‑Axis</label>\r\n                <p-dropdown id=\"xAxis\" [options]=\"xAxisOptions\" [(ngModel)]=\"widgetConfig.xField\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\" (onChange)=\"updateChart()\"></p-dropdown>\r\n              </div>\r\n              <!-- Prevent label and switch collision by allowing wrap -->\r\n              <div class=\"flex items-center gap-3 flex-wrap\">\r\n                <p-inputSwitch [(ngModel)]=\"widgetConfig.stacked\" inputId=\"stackedSwitch\" (ngModelChange)=\"updateChart()\"></p-inputSwitch>\r\n                <label for=\"stackedSwitch\" class=\"whitespace-nowrap\">Stack Series</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"my-3\"></div>\r\n            <div class=\"space-y-3\">\r\n              <!-- More room inside row, rounded, no harsh borders -->\r\n              <div *ngFor=\"let series of widgetConfig.series; let i = index\" class=\"grid md:grid-cols-6 gap-3 items-end rounded-xl p-3\">\r\n                <div class=\"md:col-span-2\">\r\n                  <label [for]=\"'s_label_' + i\" class=\"block font-medium mb-2\">Label</label>\r\n                  <input [id]=\"'s_label_' + i\" type=\"text\" pInputText class=\"w-full\" [(ngModel)]=\"series.label\" (ngModelChange)=\"updateChart()\">\r\n                </div>\r\n                <div>\r\n                  <label [for]=\"'s_field_' + i\" class=\"block font-medium mb-2\">Field</label>\r\n                  <p-dropdown [id]=\"'s_field_' + i\" [options]=\"seriesFieldOptions\" [(ngModel)]=\"series.field\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\" (onChange)=\"updateChart()\"></p-dropdown>\r\n                </div>\r\n                <div>\r\n                  <label [for]=\"'s_type_' + i\" class=\"block font-medium mb-2\">Series Type</label>\r\n                  <p-dropdown [id]=\"'s_type_' + i\" [options]=\"seriesTypeOptions\" [(ngModel)]=\"series.type\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\" [disabled]=\"widgetConfig.vizType !== 'area'\" (onChange)=\"updateChart()\"></p-dropdown>\r\n                </div>\r\n                <div>\r\n                  <label [for]=\"'s_yaxis_' + i\" class=\"block font-medium mb-2\">Y‑Axis</label>\r\n                  <p-dropdown [id]=\"'s_yaxis_' + i\" [options]=\"yAxisOptions\" [(ngModel)]=\"series.yAxis\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\" (onChange)=\"updateChart()\"></p-dropdown>\r\n                </div>\r\n                <div class=\"flex items-center justify-end\">\r\n                  <p-button icon=\"pi pi-trash\" styleClass=\"p-button-danger p-button-text\" (onClick)=\"removeSeries(series.id)\"></p-button>\r\n                </div>\r\n              </div>\r\n              <p-button label=\"Add Series\" icon=\"pi pi-plus\" styleClass=\"p-button-outlined\" (onClick)=\"addSeries()\"></p-button>\r\n            </div>\r\n          </p-card>\r\n        </p-tabPanel>\r\n\r\n        <p-tabPanel header=\"4. Visualization\">\r\n          <p-card>\r\n            <ng-template pTemplate=\"header\">\r\n              <div class=\"pb-2\">\r\n                <h3 class=\"text-lg font-semibold\">Visualization Options</h3>\r\n                <p class=\"text-xs text-muted-foreground\">Grid, legend, labels, appetite bands & annotations.</p>\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"grid gap-4 md:grid-cols-3\">\r\n              <div class=\"flex items-center gap-3 flex-wrap\">\r\n                <p-inputSwitch [(ngModel)]=\"widgetConfig.showGrid\" inputId=\"gridSwitch\" (ngModelChange)=\"updateChart()\"></p-inputSwitch>\r\n                <label for=\"gridSwitch\" class=\"whitespace-nowrap\">Show grid</label>\r\n              </div>\r\n              <div class=\"flex items-center gap-3 flex-wrap\">\r\n                <p-inputSwitch [(ngModel)]=\"widgetConfig.showLegend\" inputId=\"legendSwitch\" (ngModelChange)=\"updateChart()\"></p-inputSwitch>\r\n                <label for=\"legendSwitch\" class=\"whitespace-nowrap\">Show legend</label>\r\n              </div>\r\n              <div class=\"flex items-center gap-3 flex-wrap\">\r\n                <p-inputSwitch [(ngModel)]=\"widgetConfig.showTooltip\" inputId=\"tooltipSwitch\" (ngModelChange)=\"updateChart()\"></p-inputSwitch>\r\n                <label for=\"tooltipSwitch\" class=\"whitespace-nowrap\">Show tooltip</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"my-4\"></div>\r\n            <div class=\"mb-2 font-medium\">Appetite Bands</div>\r\n            <div class=\"space-y-3\">\r\n              <div *ngFor=\"let band of widgetConfig.appetiteBands; let i = index\" class=\"grid md:grid-cols-5 gap-3 items-end rounded-xl p-3\">\r\n                <div>\r\n                  <label [for]=\"'b_val_' + i\" class=\"block font-medium mb-2\">Value</label>\r\n                  <input [id]=\"'b_val_' + i\" type=\"number\" pInputText class=\"w-full\" [(ngModel)]=\"band.value\" (ngModelChange)=\"updateChart()\">\r\n                </div>\r\n                <div class=\"md:col-span-2\">\r\n                  <label [for]=\"'b_label_' + i\" class=\"block font-medium mb-2\">Label</label>\r\n                  <input [id]=\"'b_label_' + i\" type=\"text\" pInputText class=\"w-full\" [(ngModel)]=\"band.label\" (ngModelChange)=\"updateChart()\">\r\n                </div>\r\n                <div class=\"flex items-center gap-3 flex-wrap\">\r\n                  <p-inputSwitch [(ngModel)]=\"band.dashed\" [inputId]=\"'b_dash_' + i\" (ngModelChange)=\"updateChart()\"></p-inputSwitch>\r\n                  <label [for]=\"'b_dash_' + i\" class=\"whitespace-nowrap\">Dashed</label>\r\n                </div>\r\n                <div class=\"flex items-center justify-end\">\r\n                  <p-button icon=\"pi pi-trash\" styleClass=\"p-button-danger p-button-text\" (onClick)=\"removeBand(band.id)\"></p-button>\r\n                </div>\r\n              </div>\r\n              <p-button label=\"Add Band\" icon=\"pi pi-plus\" styleClass=\"p-button-outlined\" (onClick)=\"addBand()\"></p-button>\r\n            </div>\r\n          </p-card>\r\n        </p-tabPanel>\r\n\r\n        <p-tabPanel header=\"5. Rules & Interactivity\">\r\n          <p-card>\r\n            <ng-template pTemplate=\"header\">\r\n              <div class=\"pb-2\">\r\n                <h3 class=\"text-lg font-semibold\">Rules & Interactivity</h3>\r\n                <p class=\"text-xs text-muted-foreground\">Configure drill‑downs and highlight rules.</p>\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"grid gap-4 md:grid-cols-2 items-end\">\r\n              <div class=\"flex items-center gap-3 flex-wrap\">\r\n                <p-inputSwitch [(ngModel)]=\"widgetConfig.drilldownEnabled\" inputId=\"drillSwitch\"></p-inputSwitch>\r\n                <label for=\"drillSwitch\" class=\"whitespace-nowrap\">Enable drill‑down</label>\r\n              </div>\r\n              <div>\r\n                <label for=\"drillTarget\" class=\"block font-medium mb-2\">Drill‑down target</label>\r\n                <input id=\"drillTarget\" type=\"text\" pInputText class=\"w-full\" [(ngModel)]=\"widgetConfig.drilldownTarget\" [disabled]=\"!widgetConfig.drilldownEnabled\">\r\n              </div>\r\n            </div>\r\n            <p class=\"text-xs text-muted-foreground mt-2\">Tip: Users can click a month to open the linked incident log with filters applied.</p>\r\n          </p-card>\r\n        </p-tabPanel>\r\n\r\n        <p-tabPanel header=\"6. Security & Schedule\">\r\n          <p-card>\r\n            <ng-template pTemplate=\"header\">\r\n              <div class=\"pb-2\">\r\n                <h3 class=\"text-lg font-semibold\">Security & Schedule</h3>\r\n                <p class=\"text-xs text-muted-foreground\">Who can view this widget and how often it refreshes.</p>\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"grid gap-4 md:grid-cols-3\">\r\n              <div>\r\n                <label for=\"roles\" class=\"block font-medium mb-2\">Roles</label>\r\n                <input id=\"roles\" type=\"text\" pInputText class=\"w-full\" [ngModel]=\"rolesInput\" (ngModelChange)=\"onRolesChange($event)\">\r\n              </div>\r\n              <div>\r\n                <label for=\"refresh\" class=\"block font-medium mb-2\">Refresh Frequency</label>\r\n                <p-dropdown id=\"refresh\" [options]=\"refreshOptions\" [(ngModel)]=\"widgetConfig.refresh\" appendTo=\"body\" [autoDisplayFirst]=\"false\" [filter]=\"true\" styleClass=\"w-full\" [panelStyle]=\"{ 'max-height': '200px', 'overflow': 'auto', width:'100%' }\"></p-dropdown>\r\n              </div>\r\n              <div class=\"flex items-end\">\r\n                <p-button label=\"Save Widget\" icon=\"pi pi-save\" styleClass=\"w-full\" (onClick)=\"saveWidget()\"></p-button>\r\n              </div>\r\n            </div>\r\n          </p-card>\r\n        </p-tabPanel>\r\n      </p-tabView>\r\n    </div>\r\n\r\n    <!-- Right: Live Preview -->\r\n    <div class=\"w-full md:w-1/2 sticky top-20 self-start RightPreview\" *ngIf=\"showPreview\">\r\n      <p-card>\r\n        <ng-template pTemplate=\"header\">\r\n          <div>\r\n            <h3 class=\"p-4 text-lg font-semibold\">Live Preview\r\n              <span class=\"text-xs text-surface-500\" *ngIf=\"widgetConfig.dataset?.includes('Sample')\">\r\n                (sample dataset)\r\n              </span>\r\n            </h3>\r\n          </div>\r\n        </ng-template>\r\n        <div>\r\n          <p-chart [type]=\"chartType\" [data]=\"chartData\" [options]=\"chartOptions\"></p-chart>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { PrebuiltTemplate, WidgetLibraryItem } from '../models/widget.config';\r\n\r\nexport type { WidgetLibraryItem };\r\n\r\nexport const PREBUILT_TEMPLATES: PrebuiltTemplate[] = [\r\n  {\r\n    id: 'orm-exec',\r\n    name: 'Operational Risk – Executive',\r\n    description: 'High-level operational risk dashboard for executive oversight',\r\n    tags: ['Incidents', 'Heatmap', 'Appetite', 'Executive'],\r\n    layout: ['IncidentTrend', 'RiskHeatmap', 'KRIBreaches', 'AppetiteUtilization'],\r\n    category: 'executive',\r\n    thumbnail: '/images/templates/orm-exec.png'\r\n  },\r\n  {\r\n    id: 'rcsa-oversight',\r\n    name: 'RCSA Oversight',\r\n    description: 'Risk and Control Self-Assessment oversight dashboard',\r\n    tags: ['Controls', 'Issues', 'RCSA'],\r\n    layout: ['ControlEffectiveness', 'AuditAging', 'KRIBreaches', 'LossEvents'],\r\n    category: 'operational',\r\n    thumbnail: '/images/templates/rcsa-oversight.png'\r\n  },\r\n  {\r\n    id: 'compliance-posture',\r\n    name: 'Compliance Posture',\r\n    description: 'Regulatory compliance monitoring and audit status',\r\n    tags: ['Regulatory', 'Issues', 'Compliance'],\r\n    layout: ['AuditAging', 'KRIBreaches', 'AppetiteUtilization', 'IncidentTrend'],\r\n    category: 'compliance',\r\n    thumbnail: '/images/templates/compliance-posture.png'\r\n  },\r\n  {\r\n    id: 'cyber-kri',\r\n    name: 'Cyber KRI & Incidents',\r\n    description: 'Cybersecurity risk indicators and incident monitoring',\r\n    tags: ['Cyber', 'KRI', 'Security'],\r\n    layout: ['IncidentTrend', 'KRIBreaches', 'RiskHeatmap', 'ControlEffectiveness'],\r\n    category: 'cyber',\r\n    thumbnail: '/images/templates/cyber-kri.png'\r\n  },\r\n  {\r\n    id: 'risk-appetite',\r\n    name: 'Risk Appetite Monitoring',\r\n    description: 'Comprehensive risk appetite utilization and breach monitoring',\r\n    tags: ['Appetite', 'KRI', 'Monitoring'],\r\n    layout: ['AppetiteUtilization', 'KRIBreaches', 'IncidentTrend', 'LossEvents'],\r\n    category: 'executive',\r\n    thumbnail: '/images/templates/risk-appetite.png'\r\n  },\r\n  {\r\n    id: 'audit-management',\r\n    name: 'Audit Management',\r\n    description: 'Audit findings tracking and aging analysis',\r\n    tags: ['Audit', 'Findings', 'Aging'],\r\n    layout: ['AuditAging', 'ControlEffectiveness', 'IncidentTrend', 'AppetiteUtilization'],\r\n    category: 'compliance',\r\n    thumbnail: '/images/templates/audit-management.png'\r\n  },\r\n  {\r\n    id: 'operational-losses',\r\n    name: 'Operational Loss Analysis',\r\n    description: 'Operational loss events analysis and trending',\r\n    tags: ['Loss', 'Events', 'Basel'],\r\n    layout: ['LossEvents', 'IncidentTrend', 'KRIBreaches', 'RiskHeatmap'],\r\n    category: 'operational',\r\n    thumbnail: '/images/templates/operational-losses.png'\r\n  },\r\n  {\r\n    id: 'control-monitoring',\r\n    name: 'Control Monitoring',\r\n    description: 'Control effectiveness monitoring and improvement tracking',\r\n    tags: ['Controls', 'Effectiveness', 'Monitoring'],\r\n    layout: ['ControlEffectiveness', 'AuditAging', 'AppetiteUtilization', 'IncidentTrend'],\r\n    category: 'operational',\r\n    thumbnail: '/images/templates/control-monitoring.png'\r\n  }\r\n];\r\n\r\nexport const WIDGET_LIBRARY: WidgetLibraryItem[] = [\r\n  {\r\n    key: 'IncidentTrend',\r\n    label: 'Incident Trend',\r\n    description: 'Shows incident trends over time with severity indicators',\r\n    category: 'charts',\r\n    icon: 'pi pi-chart-line',\r\n    defaultConfig: {\r\n      type: 'area',\r\n      dataset: 'incident-trend',\r\n      xField: 'month',\r\n      series: [\r\n        { id: 's1', label: 'Incidents', field: 'incidents', type: 'area', yAxis: 'left', fillOpacity: 0.3 }\r\n      ],\r\n      showLegend: true,\r\n      showGrid: true,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'RiskHeatmap',\r\n    label: 'Risk Heatmap',\r\n    description: '5x5 risk heatmap showing likelihood vs impact matrix',\r\n    category: 'charts',\r\n    icon: 'pi pi-th-large',\r\n    defaultConfig: {\r\n      type: 'heatmap',\r\n      dataset: 'risk-heatmap',\r\n      xField: 'likelihood',\r\n      series: [\r\n        { id: 's1', label: 'Risk Score', field: 'riskScore', type: 'bar', yAxis: 'left' }\r\n      ],\r\n      showLegend: false,\r\n      showGrid: true,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'KRIBreaches',\r\n    label: 'KRI Breaches',\r\n    description: 'Key Risk Indicator breaches by risk type',\r\n    category: 'charts',\r\n    icon: 'pi pi-exclamation-triangle',\r\n    defaultConfig: {\r\n      type: 'bar',\r\n      dataset: 'kri-breaches',\r\n      xField: 'name',\r\n      series: [\r\n        { id: 's1', label: 'Breaches', field: 'breaches', type: 'bar', yAxis: 'left' }\r\n      ],\r\n      showLegend: true,\r\n      showGrid: true,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'ControlEffectiveness',\r\n    label: 'Control Effectiveness',\r\n    description: 'Control effectiveness scores in radar chart format',\r\n    category: 'charts',\r\n    icon: 'pi pi-shield',\r\n    defaultConfig: {\r\n      type: 'radar',\r\n      dataset: 'control-effectiveness',\r\n      xField: 'control',\r\n      series: [\r\n        { id: 's1', label: 'Score', field: 'score', type: 'line', yAxis: 'left' }\r\n      ],\r\n      showLegend: true,\r\n      showGrid: true,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'LossEvents',\r\n    label: 'Loss Events by Category',\r\n    description: 'Operational loss events by Basel category',\r\n    category: 'charts',\r\n    icon: 'pi pi-money-bill',\r\n    defaultConfig: {\r\n      type: 'bar',\r\n      dataset: 'loss-events',\r\n      xField: 'type',\r\n      series: [\r\n        { id: 's1', label: 'Amount (M)', field: 'amount', type: 'bar', yAxis: 'left' }\r\n      ],\r\n      showLegend: true,\r\n      showGrid: true,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'AuditAging',\r\n    label: 'Audit Findings – Aging',\r\n    description: 'Audit findings aging analysis in pie chart format',\r\n    category: 'charts',\r\n    icon: 'pi pi-clock',\r\n    defaultConfig: {\r\n      type: 'pie',\r\n      dataset: 'audit-aging',\r\n      xField: 'aging',\r\n      series: [\r\n        { id: 's1', label: 'Findings', field: 'findings', type: 'bar', yAxis: 'left' }\r\n      ],\r\n      showLegend: true,\r\n      showGrid: false,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'AppetiteUtilization',\r\n    label: 'Risk Appetite Utilization',\r\n    description: 'Risk appetite utilization across key KPIs',\r\n    category: 'metrics',\r\n    icon: 'pi pi-chart-pie',\r\n    defaultConfig: {\r\n      type: 'progress',\r\n      dataset: 'appetite-utilization',\r\n      xField: 'kpi',\r\n      series: [\r\n        { id: 's1', label: 'Utilization', field: 'value', type: 'bar', yAxis: 'left' }\r\n      ],\r\n      showLegend: false,\r\n      showGrid: false,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'MetricCard',\r\n    label: 'Metric Card',\r\n    description: 'Single metric display with trend indicator',\r\n    category: 'metrics',\r\n    icon: 'pi pi-calculator',\r\n    defaultConfig: {\r\n      type: 'line',\r\n      dataset: 'incident-trend',\r\n      xField: 'month',\r\n      series: [\r\n        { id: 's1', label: 'Value', field: 'incidents', type: 'line', yAxis: 'left' }\r\n      ],\r\n      showLegend: false,\r\n      showGrid: false,\r\n      showTooltip: true\r\n    }\r\n  },\r\n  {\r\n    key: 'DataTable',\r\n    label: 'Data Table',\r\n    description: 'Tabular data display with sorting and filtering',\r\n    category: 'tables',\r\n    icon: 'pi pi-table',\r\n    defaultConfig: {\r\n      type: 'line',\r\n      dataset: 'incident-trend',\r\n      xField: 'month',\r\n      series: [\r\n        { id: 's1', label: 'Data', field: 'incidents', type: 'line', yAxis: 'left' }\r\n      ],\r\n      showLegend: false,\r\n      showGrid: false,\r\n      showTooltip: false\r\n    }\r\n  }\r\n];\r\n\r\nexport const TEMPLATE_CATEGORIES = [\r\n  { key: 'executive', label: 'Executive', icon: 'pi pi-users' },\r\n  { key: 'operational', label: 'Operational', icon: 'pi pi-cog' },\r\n  { key: 'compliance', label: 'Compliance', icon: 'pi pi-shield' },\r\n  { key: 'cyber', label: 'Cybersecurity', icon: 'pi pi-lock' }\r\n];\r\n\r\nexport const WIDGET_CATEGORIES = [\r\n  { key: 'charts', label: 'Charts', icon: 'pi pi-chart-bar' },\r\n  { key: 'metrics', label: 'Metrics', icon: 'pi pi-calculator' },\r\n  { key: 'tables', label: 'Tables', icon: 'pi pi-table' },\r\n  { key: 'maps', label: 'Maps', icon: 'pi pi-map' }\r\n];\r\n","import { \r\n  IncidentTrendData, \r\n  KRIBreachData, \r\n  ControlEffectivenessData, \r\n  LossEventData, \r\n  AuditAgingData, \r\n  AppetiteUtilizationData, \r\n  RiskHeatmapData,\r\n  DatasetConfig \r\n} from '../models/chart.data';\r\n\r\n// Incident Trend Data - 12 months\r\nexport const INCIDENT_TREND_DATA: IncidentTrendData[] = [\r\n  { month: 'Jan', incidents: 42, severity: 3.2, resolved: 38, pending: 4 },\r\n  { month: 'Feb', incidents: 35, severity: 2.8, resolved: 32, pending: 3 },\r\n  { month: 'Mar', incidents: 58, severity: 3.5, resolved: 52, pending: 6 },\r\n  { month: 'Apr', incidents: 49, severity: 3.1, resolved: 44, pending: 5 },\r\n  { month: 'May', incidents: 61, severity: 3.8, resolved: 55, pending: 6 },\r\n  { month: 'Jun', incidents: 39, severity: 2.9, resolved: 35, pending: 4 },\r\n  { month: 'Jul', incidents: 45, severity: 3.3, resolved: 40, pending: 5 },\r\n  { month: 'Aug', incidents: 53, severity: 3.6, resolved: 47, pending: 6 },\r\n  { month: 'Sep', incidents: 38, severity: 2.7, resolved: 34, pending: 4 },\r\n  { month: 'Oct', incidents: 41, severity: 3.0, resolved: 37, pending: 4 },\r\n  { month: 'Nov', incidents: 36, severity: 2.8, resolved: 32, pending: 4 },\r\n  { month: 'Dec', incidents: 47, severity: 3.4, resolved: 42, pending: 5 }\r\n];\r\n\r\n// KRI Breaches by Risk Type\r\nexport const KRI_BREACH_DATA: KRIBreachData[] = [\r\n  { name: 'Credit', breaches: 6, threshold: 5, trend: 'up' },\r\n  { name: 'Liquidity', breaches: 3, threshold: 4, trend: 'down' },\r\n  { name: 'Market', breaches: 4, threshold: 6, trend: 'stable' },\r\n  { name: 'Operational', breaches: 9, threshold: 7, trend: 'up' },\r\n  { name: 'Cyber', breaches: 7, threshold: 5, trend: 'up' },\r\n  { name: 'Compliance', breaches: 2, threshold: 3, trend: 'down' },\r\n  { name: 'Reputation', breaches: 1, threshold: 2, trend: 'stable' }\r\n];\r\n\r\n// Control Effectiveness Scores\r\nexport const CONTROL_EFFECTIVENESS_DATA: ControlEffectivenessData[] = [\r\n  { control: 'Segregation of Duties', score: 82, target: 85, lastReview: new Date('2024-01-15') },\r\n  { control: 'Trade Limits', score: 74, target: 80, lastReview: new Date('2024-01-10') },\r\n  { control: 'Dual Authorization', score: 91, target: 90, lastReview: new Date('2024-01-20') },\r\n  { control: 'Access Reviews', score: 68, target: 75, lastReview: new Date('2024-01-05') },\r\n  { control: 'Vulnerability Patching', score: 77, target: 85, lastReview: new Date('2024-01-12') },\r\n  { control: 'Data Encryption', score: 89, target: 90, lastReview: new Date('2024-01-18') },\r\n  { control: 'Backup Procedures', score: 95, target: 95, lastReview: new Date('2024-01-22') },\r\n  { control: 'Incident Response', score: 71, target: 80, lastReview: new Date('2024-01-08') }\r\n];\r\n\r\n// Loss Events by Basel Category (in millions)\r\nexport const LOSS_EVENT_DATA: LossEventData[] = [\r\n  { type: 'External Fraud', amount: 12.4, frequency: 8, trend: 'up' },\r\n  { type: 'Clients, Products & Practices', amount: 7.9, frequency: 12, trend: 'stable' },\r\n  { type: 'Execution & Delivery', amount: 15.6, frequency: 15, trend: 'up' },\r\n  { type: 'Business Disruption & System Failures', amount: 5.2, frequency: 6, trend: 'down' },\r\n  { type: 'Damage to Physical Assets', amount: 2.1, frequency: 3, trend: 'stable' },\r\n  { type: 'Internal Fraud', amount: 8.7, frequency: 4, trend: 'up' },\r\n  { type: 'Employment Practices', amount: 3.4, frequency: 7, trend: 'down' }\r\n];\r\n\r\n// Audit Findings Aging\r\nexport const AUDIT_AGING_DATA: AuditAgingData[] = [\r\n  { aging: '<30d', findings: 14, critical: 2, high: 4, medium: 6, low: 2 },\r\n  { aging: '30–60d', findings: 11, critical: 1, high: 3, medium: 5, low: 2 },\r\n  { aging: '60–90d', findings: 7, critical: 0, high: 2, medium: 3, low: 2 },\r\n  { aging: '>90d', findings: 4, critical: 1, high: 1, medium: 1, low: 1 }\r\n];\r\n\r\n// Risk Appetite Utilization\r\nexport const APPETITE_UTILIZATION_DATA: AppetiteUtilizationData[] = [\r\n  { kpi: 'Incident Severity Index', value: 0.62, threshold: 0.7, status: 'green' },\r\n  { kpi: 'Loss vs. Appetite', value: 0.51, threshold: 0.6, status: 'green' },\r\n  { kpi: 'Open Audit Issues', value: 0.73, threshold: 0.8, status: 'amber' },\r\n  { kpi: 'Control Weakness Density', value: 0.47, threshold: 0.5, status: 'green' },\r\n  { kpi: 'KRI Breach Rate', value: 0.68, threshold: 0.75, status: 'green' },\r\n  { kpi: 'Risk Coverage Ratio', value: 0.82, threshold: 0.9, status: 'amber' }\r\n];\r\n\r\n// Risk Heatmap Data (5x5 grid)\r\nexport const RISK_HEATMAP_DATA: RiskHeatmapData[] = [\r\n  { likelihood: 1, impact: 1, riskScore: 0.1, category: 'Low', description: 'Minor operational issues' },\r\n  { likelihood: 2, impact: 1, riskScore: 0.2, category: 'Low', description: 'Routine maintenance' },\r\n  { likelihood: 3, impact: 1, riskScore: 0.3, category: 'Low', description: 'Standard procedures' },\r\n  { likelihood: 4, impact: 1, riskScore: 0.4, category: 'Low', description: 'Regular monitoring' },\r\n  { likelihood: 5, impact: 1, riskScore: 0.5, category: 'Medium', description: 'Frequent minor issues' },\r\n  \r\n  { likelihood: 1, impact: 2, riskScore: 0.2, category: 'Low', description: 'Minor system glitches' },\r\n  { likelihood: 2, impact: 2, riskScore: 0.4, category: 'Low', description: 'Small process delays' },\r\n  { likelihood: 3, impact: 2, riskScore: 0.6, category: 'Medium', description: 'Moderate disruptions' },\r\n  { likelihood: 4, impact: 2, riskScore: 0.8, category: 'Medium', description: 'Regular service issues' },\r\n  { likelihood: 5, impact: 2, riskScore: 1.0, category: 'High', description: 'Frequent service problems' },\r\n  \r\n  { likelihood: 1, impact: 3, riskScore: 0.3, category: 'Low', description: 'Occasional delays' },\r\n  { likelihood: 2, impact: 3, riskScore: 0.6, category: 'Medium', description: 'Periodic disruptions' },\r\n  { likelihood: 3, impact: 3, riskScore: 0.9, category: 'Medium', description: 'Regular operational issues' },\r\n  { likelihood: 4, impact: 3, riskScore: 1.2, category: 'High', description: 'Frequent operational problems' },\r\n  { likelihood: 5, impact: 3, riskScore: 1.5, category: 'High', description: 'Constant operational issues' },\r\n  \r\n  { likelihood: 1, impact: 4, riskScore: 0.4, category: 'Medium', description: 'Rare major incidents' },\r\n  { likelihood: 2, impact: 4, riskScore: 0.8, category: 'Medium', description: 'Occasional major issues' },\r\n  { likelihood: 3, impact: 4, riskScore: 1.2, category: 'High', description: 'Regular major problems' },\r\n  { likelihood: 4, impact: 4, riskScore: 1.6, category: 'High', description: 'Frequent major issues' },\r\n  { likelihood: 5, impact: 4, riskScore: 2.0, category: 'Critical', description: 'Constant major problems' },\r\n  \r\n  { likelihood: 1, impact: 5, riskScore: 0.5, category: 'Medium', description: 'Rare catastrophic events' },\r\n  { likelihood: 2, impact: 5, riskScore: 1.0, category: 'High', description: 'Occasional catastrophic events' },\r\n  { likelihood: 3, impact: 5, riskScore: 1.5, category: 'High', description: 'Regular catastrophic events' },\r\n  { likelihood: 4, impact: 5, riskScore: 2.0, category: 'Critical', description: 'Frequent catastrophic events' },\r\n  { likelihood: 5, impact: 5, riskScore: 2.5, category: 'Critical', description: 'Constant catastrophic events' }\r\n];\r\n\r\n// Dataset Configurations\r\nexport const DATASET_CONFIGS: DatasetConfig[] = [\r\n  {\r\n    id: 'incident-trend',\r\n    name: 'Incident Trend Data',\r\n    description: 'Monthly incident data with severity and resolution metrics',\r\n    type: 'incident',\r\n    fields: ['month', 'incidents', 'severity', 'resolved', 'pending'],\r\n    refreshRate: 'monthly',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'kri-breaches',\r\n    name: 'KRI Breach Data',\r\n    description: 'Key Risk Indicator breach data by risk type',\r\n    type: 'kri',\r\n    fields: ['name', 'breaches', 'threshold', 'trend'],\r\n    refreshRate: 'daily',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'control-effectiveness',\r\n    name: 'Control Effectiveness',\r\n    description: 'Control effectiveness scores and targets',\r\n    type: 'control',\r\n    fields: ['control', 'score', 'target', 'lastReview'],\r\n    refreshRate: 'monthly',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'loss-events',\r\n    name: 'Loss Events by Category',\r\n    description: 'Operational loss events by Basel category',\r\n    type: 'loss',\r\n    fields: ['type', 'amount', 'frequency', 'trend'],\r\n    refreshRate: 'monthly',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'audit-aging',\r\n    name: 'Audit Findings Aging',\r\n    description: 'Audit findings by aging category and severity',\r\n    type: 'audit',\r\n    fields: ['aging', 'findings', 'critical', 'high', 'medium', 'low'],\r\n    refreshRate: 'monthly',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'appetite-utilization',\r\n    name: 'Risk Appetite Utilization',\r\n    description: 'Risk appetite utilization across key KPIs',\r\n    type: 'appetite',\r\n    fields: ['kpi', 'value', 'threshold', 'status'],\r\n    refreshRate: 'daily',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'risk-heatmap',\r\n    name: 'Risk Heatmap Data',\r\n    description: 'Risk assessment data for heatmap visualization',\r\n    type: 'heatmap',\r\n    fields: ['likelihood', 'impact', 'riskScore', 'category', 'description'],\r\n    refreshRate: 'monthly',\r\n    lastUpdated: new Date()\r\n  }\r\n];\r\n\r\n// Color palettes for charts\r\nexport const CHART_COLORS = {\r\n  primary: ['#6366f1', '#22c55e', '#f97316', '#06b6d4', '#ef4444', '#a855f7'],\r\n  risk: ['#ef4444', '#f97316', '#eab308', '#22c55e', '#10b981'],\r\n  status: {\r\n    green: '#22c55e',\r\n    amber: '#f97316',\r\n    red: '#ef4444',\r\n    blue: '#3b82f6',\r\n    purple: '#8b5cf6'\r\n  },\r\n  heatmap: {\r\n    low: '#22c55e',\r\n    medium: '#eab308',\r\n    high: '#f97316',\r\n    critical: '#ef4444'\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\r\nimport { map, distinctUntilChanged } from 'rxjs/operators';\r\nimport { \r\n  DashboardState, \r\n  DashboardConfig, \r\n  WidgetConfig, \r\n  GlobalFilters,\r\n  GridPosition \r\n} from '../models/dashboard.layout';\r\nimport { \r\n  PREBUILT_TEMPLATES, \r\n  WIDGET_LIBRARY \r\n} from '../templates/prebuilt-templates';\r\nimport { \r\n  INCIDENT_TREND_DATA,\r\n  KRI_BREACH_DATA,\r\n  CONTROL_EFFECTIVENESS_DATA,\r\n  LOSS_EVENT_DATA,\r\n  AUDIT_AGING_DATA,\r\n  APPETITE_UTILIZATION_DATA,\r\n  RISK_HEATMAP_DATA\r\n} from '../data/sample-datasets';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n  private stateSubject = new BehaviorSubject<DashboardState>({\r\n    mode: 'prebuilt',\r\n    activeLayout: [],\r\n    selectedWidget: undefined,\r\n    isEditing: false,\r\n    leftPanelOpen: true,\r\n    showAddWidget: false,\r\n    searchQuery: ''\r\n  });\r\n\r\n  private widgetsSubject = new BehaviorSubject<WidgetConfig[]>([]);\r\n  private filtersSubject = new BehaviorSubject<GlobalFilters>({\r\n    dateRange: 'MTD',\r\n    businessUnit: 'All',\r\n    riskCategory: 'All',\r\n    severity: 1,\r\n    autoRefresh: true,\r\n    refreshInterval: 60\r\n  });\r\n\r\n  // Observables\r\n  public state$ = this.stateSubject.asObservable();\r\n  public widgets$ = this.widgetsSubject.asObservable();\r\n  public filters$ = this.filtersSubject.asObservable();\r\n\r\n  // Computed observables\r\n  public mode$ = this.state$.pipe(\r\n    map(state => state.mode),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public activeLayout$ = this.state$.pipe(\r\n    map(state => state.activeLayout),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public selectedWidget$ = this.state$.pipe(\r\n    map(state => state.selectedWidget),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public isEditing$ = this.state$.pipe(\r\n    map(state => state.isEditing),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public leftPanelOpen$ = this.state$.pipe(\r\n    map(state => state.leftPanelOpen),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public showAddWidget$ = this.state$.pipe(\r\n    map(state => state.showAddWidget),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public searchQuery$ = this.state$.pipe(\r\n    map(state => state.searchQuery),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  public filteredTemplates$ = combineLatest([\r\n    this.state$,\r\n    this.searchQuery$\r\n  ]).pipe(\r\n    map(([state, searchQuery]) => {\r\n      if (!searchQuery) return PREBUILT_TEMPLATES;\r\n      \r\n      const query = searchQuery.toLowerCase();\r\n      return PREBUILT_TEMPLATES.filter(template => \r\n        template.name.toLowerCase().includes(query) ||\r\n        template.description.toLowerCase().includes(query) ||\r\n        template.tags.some(tag => tag.toLowerCase().includes(query))\r\n      );\r\n    })\r\n  );\r\n\r\n  public filteredWidgets$ = combineLatest([\r\n    this.state$,\r\n    this.searchQuery$\r\n  ]).pipe(\r\n    map(([state, searchQuery]) => {\r\n      if (!searchQuery) return WIDGET_LIBRARY;\r\n      \r\n      const query = searchQuery.toLowerCase();\r\n      return WIDGET_LIBRARY.filter(widget => \r\n        widget.label.toLowerCase().includes(query) ||\r\n        widget.description.toLowerCase().includes(query) ||\r\n        widget.category.toLowerCase().includes(query)\r\n      );\r\n    })\r\n  );\r\n\r\n  constructor() {\r\n    this.initializeDefaultLayout();\r\n  }\r\n\r\n  // State management methods\r\n  setMode(mode: 'prebuilt' | 'builder' | 'library'): void {\r\n    this.updateState({ mode });\r\n  }\r\n\r\n  setActiveLayout(layout: string[]): void {\r\n    this.updateState({ activeLayout: layout });\r\n  }\r\n\r\n  setSelectedWidget(widget: WidgetConfig | undefined): void {\r\n    this.updateState({ selectedWidget: widget });\r\n  }\r\n\r\n  setIsEditing(editing: boolean): void {\r\n    this.updateState({ isEditing: editing });\r\n  }\r\n\r\n  setLeftPanelOpen(open: boolean): void {\r\n    this.updateState({ leftPanelOpen: open });\r\n  }\r\n\r\n  setShowAddWidget(show: boolean): void {\r\n    this.updateState({ showAddWidget: show });\r\n  }\r\n\r\n  setSearchQuery(query: string): void {\r\n    this.updateState({ searchQuery: query });\r\n  }\r\n\r\n  // Widget management methods\r\n  addWidget(widgetKey: string): void {\r\n    const widgetTemplate = WIDGET_LIBRARY.find(w => w.key === widgetKey);\r\n    if (!widgetTemplate) return;\r\n\r\n    const newWidget: WidgetConfig = {\r\n      id: this.generateWidgetId(),\r\n      name: widgetTemplate.label,\r\n      description: widgetTemplate.description,\r\n      type: widgetTemplate.defaultConfig.type || 'line',\r\n      dataset: widgetTemplate.defaultConfig.dataset || 'incident-trend',\r\n      xField: widgetTemplate.defaultConfig.xField || 'month',\r\n      series: widgetTemplate.defaultConfig.series || [],\r\n      appetiteBands: [],\r\n      stacked: false,\r\n      showLegend: widgetTemplate.defaultConfig.showLegend || true,\r\n      showGrid: widgetTemplate.defaultConfig.showGrid || true,\r\n      showTooltip: widgetTemplate.defaultConfig.showTooltip || true,\r\n      drilldownEnabled: false,\r\n      refresh: 'monthly',\r\n      roles: ['Risk Manager'],\r\n      position: this.calculateNextPosition(),\r\n      ...widgetTemplate.defaultConfig\r\n    };\r\n\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    this.widgetsSubject.next([...currentWidgets, newWidget]);\r\n    this.updateActiveLayout();\r\n  }\r\n\r\n  removeWidget(widgetId: string): void {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const updatedWidgets = currentWidgets.filter(w => w.id !== widgetId);\r\n    this.widgetsSubject.next(updatedWidgets);\r\n    this.updateActiveLayout();\r\n  }\r\n\r\n  updateWidget(widgetId: string, updates: Partial<WidgetConfig>): void {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const updatedWidgets = currentWidgets.map(w => \r\n      w.id === widgetId ? { ...w, ...updates } : w\r\n    );\r\n    this.widgetsSubject.next(updatedWidgets);\r\n  }\r\n\r\n  duplicateWidget(widgetId: string): void {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const widgetToDuplicate = currentWidgets.find(w => w.id === widgetId);\r\n    if (!widgetToDuplicate) return;\r\n\r\n    const duplicatedWidget: WidgetConfig = {\r\n      ...widgetToDuplicate,\r\n      id: this.generateWidgetId(),\r\n      name: `${widgetToDuplicate.name} (Copy)`,\r\n      position: this.calculateNextPosition()\r\n    };\r\n\r\n    this.widgetsSubject.next([...currentWidgets, duplicatedWidget]);\r\n    this.updateActiveLayout();\r\n  }\r\n\r\n  reorderWidgets(fromIndex: number, toIndex: number): void {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const reorderedWidgets = [...currentWidgets];\r\n    const [movedWidget] = reorderedWidgets.splice(fromIndex, 1);\r\n    reorderedWidgets.splice(toIndex, 0, movedWidget);\r\n    this.widgetsSubject.next(reorderedWidgets);\r\n    this.updateActiveLayout();\r\n  }\r\n\r\n  // Template management methods\r\n  applyTemplate(templateId: string): void {\r\n    const template = PREBUILT_TEMPLATES.find(t => t.id === templateId);\r\n    if (!template) return;\r\n\r\n    this.setActiveLayout(template.layout);\r\n    this.setMode('builder');\r\n    this.loadTemplateWidgets(template.layout);\r\n  }\r\n\r\n  saveAsTemplate(name: string, description: string, tags: string[]): void {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const currentFilters = this.filtersSubject.value;\r\n    \r\n    const template: DashboardConfig = {\r\n      id: this.generateId(),\r\n      name,\r\n      description,\r\n      layout: {\r\n        columns: 12,\r\n        rows: 8,\r\n        breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480 },\r\n        margin: [16, 16],\r\n        containerPadding: [16, 16]\r\n      },\r\n      widgets: currentWidgets,\r\n      filters: currentFilters,\r\n      theme: 'light',\r\n      autoRefresh: true,\r\n      refreshInterval: 60,\r\n      permissions: {\r\n        canEdit: ['Risk Manager'],\r\n        canView: ['Risk Manager', 'Executive'],\r\n        canShare: ['Risk Manager']\r\n      },\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      createdBy: 'Current User',\r\n      version: 1\r\n    };\r\n\r\n    // In a real app, this would save to a backend service\r\n    console.log('Saving template:', template);\r\n  }\r\n\r\n  // Filter management methods\r\n  updateFilters(filters: Partial<GlobalFilters>): void {\r\n    const currentFilters = this.filtersSubject.value;\r\n    this.filtersSubject.next({ ...currentFilters, ...filters });\r\n  }\r\n\r\n  resetFilters(): void {\r\n    this.filtersSubject.next({\r\n      dateRange: 'MTD',\r\n      businessUnit: 'All',\r\n      riskCategory: 'All',\r\n      severity: 1,\r\n      autoRefresh: true,\r\n      refreshInterval: 60\r\n    });\r\n  }\r\n\r\n  // Data methods\r\n  getDataForDataset(datasetId: string): any[] {\r\n    switch (datasetId) {\r\n      case 'incident-trend':\r\n        return INCIDENT_TREND_DATA;\r\n      case 'kri-breaches':\r\n        return KRI_BREACH_DATA;\r\n      case 'control-effectiveness':\r\n        return CONTROL_EFFECTIVENESS_DATA;\r\n      case 'loss-events':\r\n        return LOSS_EVENT_DATA;\r\n      case 'audit-aging':\r\n        return AUDIT_AGING_DATA;\r\n      case 'appetite-utilization':\r\n        return APPETITE_UTILIZATION_DATA;\r\n      case 'risk-heatmap':\r\n        return RISK_HEATMAP_DATA;\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n\r\n  // Private helper methods\r\n  private updateState(updates: Partial<DashboardState>): void {\r\n    const currentState = this.stateSubject.value;\r\n    this.stateSubject.next({ ...currentState, ...updates });\r\n  }\r\n\r\n  private initializeDefaultLayout(): void {\r\n    const defaultLayout = ['IncidentTrend', 'RiskHeatmap', 'KRIBreaches', 'ControlEffectiveness', 'LossEvents', 'AuditAging', 'AppetiteUtilization'];\r\n    this.setActiveLayout(defaultLayout);\r\n    this.loadTemplateWidgets(defaultLayout);\r\n  }\r\n\r\n  private loadTemplateWidgets(layout: string[]): void {\r\n    const widgets: WidgetConfig[] = layout.map((widgetKey, index) => {\r\n      const template = WIDGET_LIBRARY.find(w => w.key === widgetKey);\r\n      if (!template) return null;\r\n\r\n      return {\r\n        id: this.generateWidgetId(),\r\n        name: template.label,\r\n        description: template.description,\r\n        type: template.defaultConfig.type || 'line',\r\n        dataset: template.defaultConfig.dataset || 'incident-trend',\r\n        xField: template.defaultConfig.xField || 'month',\r\n        series: template.defaultConfig.series || [],\r\n        appetiteBands: [],\r\n        stacked: false,\r\n        showLegend: template.defaultConfig.showLegend || true,\r\n        showGrid: template.defaultConfig.showGrid || true,\r\n        showTooltip: template.defaultConfig.showTooltip || true,\r\n        drilldownEnabled: false,\r\n        refresh: 'monthly',\r\n        roles: ['Risk Manager'],\r\n        position: this.calculatePosition(index),\r\n        ...template.defaultConfig\r\n      };\r\n    }).filter(Boolean) as WidgetConfig[];\r\n\r\n    this.widgetsSubject.next(widgets);\r\n  }\r\n\r\n  private updateActiveLayout(): void {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const layout = currentWidgets.map(w => w.name.replace(/\\s+/g, ''));\r\n    this.setActiveLayout(layout);\r\n  }\r\n\r\n  private calculatePosition(index: number): GridPosition {\r\n    const cols = 12;\r\n    const rows = 8;\r\n    const widgetHeight = 2;\r\n    const widgetWidth = 3;\r\n\r\n    const x = (index % (cols / widgetWidth)) * widgetWidth;\r\n    const y = Math.floor(index / (cols / widgetWidth)) * widgetHeight;\r\n\r\n    return { x, y, w: widgetWidth, h: widgetHeight };\r\n  }\r\n\r\n  private calculateNextPosition(): GridPosition {\r\n    const currentWidgets = this.widgetsSubject.value;\r\n    const maxY = Math.max(...currentWidgets.map(w => w.position.y + w.position.h), 0);\r\n    return { x: 0, y: maxY, w: 3, h: 2 };\r\n  }\r\n\r\n  private generateWidgetId(): string {\r\n    return `widget_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateId(): string {\r\n    return `template_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { WidgetConfig, SeriesConfig, AppetiteBand } from '../models/widget.config';\r\nimport { ChartDataType } from '../models/chart.data';\r\nimport { DashboardService } from './dashboard.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n  private selectedWidgetSubject = new BehaviorSubject<WidgetConfig | null>(null);\r\n  private isConfiguringSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  public selectedWidget$ = this.selectedWidgetSubject.asObservable();\r\n  public isConfiguring$ = this.isConfiguringSubject.asObservable();\r\n\r\n  constructor(private dashboardService: DashboardService) {}\r\n\r\n  // Widget selection and configuration\r\n  selectWidget(widget: WidgetConfig | null): void {\r\n    this.selectedWidgetSubject.next(widget);\r\n  }\r\n\r\n  startConfiguration(widget: WidgetConfig): void {\r\n    this.selectWidget(widget);\r\n    this.isConfiguringSubject.next(true);\r\n  }\r\n\r\n  stopConfiguration(): void {\r\n    this.isConfiguringSubject.next(false);\r\n    this.selectWidget(null);\r\n  }\r\n\r\n  // Widget configuration methods\r\n  updateWidgetName(widgetId: string, name: string): void {\r\n    this.dashboardService.updateWidget(widgetId, { name });\r\n  }\r\n\r\n  updateWidgetDescription(widgetId: string, description: string): void {\r\n    this.dashboardService.updateWidget(widgetId, { description });\r\n  }\r\n\r\n  updateWidgetType(widgetId: string, type: WidgetConfig['type']): void {\r\n    this.dashboardService.updateWidget(widgetId, { type });\r\n  }\r\n\r\n  updateWidgetDataset(widgetId: string, dataset: string): void {\r\n    this.dashboardService.updateWidget(widgetId, { dataset });\r\n  }\r\n\r\n  updateWidgetXField(widgetId: string, xField: string): void {\r\n    this.dashboardService.updateWidget(widgetId, { xField });\r\n  }\r\n\r\n  // Series management\r\n  addSeries(widgetId: string, series: Omit<SeriesConfig, 'id'>): void {\r\n    const widget = this.getWidgetById(widgetId);\r\n    if (!widget) return;\r\n\r\n    const newSeries: SeriesConfig = {\r\n      id: this.generateSeriesId(),\r\n      ...series\r\n    };\r\n\r\n    const updatedSeries = [...widget.series, newSeries];\r\n    this.dashboardService.updateWidget(widgetId, { series: updatedSeries });\r\n  }\r\n\r\n  updateSeries(widgetId: string, seriesId: string, updates: Partial<SeriesConfig>): void {\r\n    const widget = this.getWidgetById(widgetId);\r\n    if (!widget) return;\r\n\r\n    const updatedSeries = widget.series.map(s => \r\n      s.id === seriesId ? { ...s, ...updates } : s\r\n    );\r\n\r\n    this.dashboardService.updateWidget(widgetId, { series: updatedSeries });\r\n  }\r\n\r\n  removeSeries(widgetId: string, seriesId: string): void {\r\n    const widget = this.getWidgetById(widgetId);\r\n    if (!widget) return;\r\n\r\n    const updatedSeries = widget.series.filter(s => s.id !== seriesId);\r\n    this.dashboardService.updateWidget(widgetId, { series: updatedSeries });\r\n  }\r\n\r\n  // Appetite bands management\r\n  addAppetiteBand(widgetId: string, band: Omit<AppetiteBand, 'id'>): void {\r\n    const widget = this.getWidgetById(widgetId);\r\n    if (!widget) return;\r\n\r\n    const newBand: AppetiteBand = {\r\n      id: this.generateBandId(),\r\n      ...band\r\n    };\r\n\r\n    const updatedBands = [...widget.appetiteBands, newBand];\r\n    this.dashboardService.updateWidget(widgetId, { appetiteBands: updatedBands });\r\n  }\r\n\r\n  updateAppetiteBand(widgetId: string, bandId: string, updates: Partial<AppetiteBand>): void {\r\n    const widget = this.getWidgetById(widgetId);\r\n    if (!widget) return;\r\n\r\n    const updatedBands = widget.appetiteBands.map(b => \r\n      b.id === bandId ? { ...b, ...updates } : b\r\n    );\r\n\r\n    this.dashboardService.updateWidget(widgetId, { appetiteBands: updatedBands });\r\n  }\r\n\r\n  removeAppetiteBand(widgetId: string, bandId: string): void {\r\n    const widget = this.getWidgetById(widgetId);\r\n    if (!widget) return;\r\n\r\n    const updatedBands = widget.appetiteBands.filter(b => b.id !== bandId);\r\n    this.dashboardService.updateWidget(widgetId, { appetiteBands: updatedBands });\r\n  }\r\n\r\n  // Display options\r\n  updateDisplayOptions(widgetId: string, options: {\r\n    showLegend?: boolean;\r\n    showGrid?: boolean;\r\n    showTooltip?: boolean;\r\n    stacked?: boolean;\r\n  }): void {\r\n    this.dashboardService.updateWidget(widgetId, options);\r\n  }\r\n\r\n  // Drill-down configuration\r\n  updateDrilldownConfig(widgetId: string, enabled: boolean, target?: string): void {\r\n    this.dashboardService.updateWidget(widgetId, {\r\n      drilldownEnabled: enabled,\r\n      drilldownTarget: target\r\n    });\r\n  }\r\n\r\n  // Security and refresh settings\r\n  updateSecuritySettings(widgetId: string, roles: string[]): void {\r\n    this.dashboardService.updateWidget(widgetId, { roles });\r\n  }\r\n\r\n  updateRefreshSettings(widgetId: string, refresh: 'realtime' | 'daily' | 'monthly'): void {\r\n    this.dashboardService.updateWidget(widgetId, { refresh });\r\n  }\r\n\r\n  // Position and size\r\n  updateWidgetPosition(widgetId: string, position: { x: number; y: number; w: number; h: number }): void {\r\n    this.dashboardService.updateWidget(widgetId, { position });\r\n  }\r\n\r\n  // Style settings\r\n  updateWidgetStyle(widgetId: string, style: {\r\n    backgroundColor?: string;\r\n    borderColor?: string;\r\n    borderRadius?: string;\r\n  }): void {\r\n    this.dashboardService.updateWidget(widgetId, { style });\r\n  }\r\n\r\n  // Data processing methods\r\n  processDataForWidget(widget: WidgetConfig): ChartDataType[] {\r\n    const rawData = this.dashboardService.getDataForDataset(widget.dataset);\r\n    \r\n    // Apply filters if needed\r\n    // This is where you would apply global filters, date ranges, etc.\r\n    \r\n    return rawData;\r\n  }\r\n\r\n  getAvailableFields(dataset: string): string[] {\r\n    const data = this.dashboardService.getDataForDataset(dataset);\r\n    if (data.length === 0) return [];\r\n    \r\n    return Object.keys(data[0]);\r\n  }\r\n\r\n  getFieldType(field: string, dataset: string): 'string' | 'number' | 'date' | 'boolean' {\r\n    const data = this.dashboardService.getDataForDataset(dataset);\r\n    if (data.length === 0) return 'string';\r\n    \r\n    const sampleValue = data[0][field];\r\n    if (typeof sampleValue === 'number') return 'number';\r\n    if (typeof sampleValue === 'boolean') return 'boolean';\r\n    if (sampleValue instanceof Date) return 'date';\r\n    return 'string';\r\n  }\r\n\r\n  // Validation methods\r\n  validateWidgetConfig(widget: WidgetConfig): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    if (!widget.name.trim()) {\r\n      errors.push('Widget name is required');\r\n    }\r\n\r\n    if (!widget.dataset) {\r\n      errors.push('Dataset is required');\r\n    }\r\n\r\n    if (!widget.xField) {\r\n      errors.push('X-axis field is required');\r\n    }\r\n\r\n    if (widget.series.length === 0) {\r\n      errors.push('At least one data series is required');\r\n    }\r\n\r\n    if (widget.type === 'pie' && widget.series.length > 1) {\r\n      errors.push('Pie charts can only have one data series');\r\n    }\r\n\r\n    if (widget.type === 'radar' && widget.series.length > 1) {\r\n      errors.push('Radar charts can only have one data series');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  // Helper methods\r\n  private getWidgetById(widgetId: string): WidgetConfig | null {\r\n    // This would typically come from the dashboard service\r\n    // For now, we'll return null and let the service handle it\r\n    return null;\r\n  }\r\n\r\n  private generateSeriesId(): string {\r\n    return `series_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateBandId(): string {\r\n    return `band_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  // Chart type specific methods\r\n  getSupportedChartTypes(): { value: string; label: string; description: string }[] {\r\n    return [\r\n      { value: 'line', label: 'Line Chart', description: 'Shows trends over time' },\r\n      { value: 'area', label: 'Area Chart', description: 'Shows trends with filled areas' },\r\n      { value: 'bar', label: 'Bar Chart', description: 'Compares values across categories' },\r\n      { value: 'pie', label: 'Pie Chart', description: 'Shows parts of a whole' },\r\n      { value: 'radar', label: 'Radar Chart', description: 'Shows multiple metrics in a circular format' },\r\n      { value: 'heatmap', label: 'Heatmap', description: 'Shows data density in a grid' },\r\n      { value: 'progress', label: 'Progress Bars', description: 'Shows progress towards goals' }\r\n    ];\r\n  }\r\n\r\n  getSupportedYAxisOptions(): { value: string; label: string }[] {\r\n    return [\r\n      { value: 'left', label: 'Left Axis' },\r\n      { value: 'right', label: 'Right Axis' }\r\n    ];\r\n  }\r\n\r\n  getSupportedSeriesTypes(): { value: string; label: string; description: string }[] {\r\n    return [\r\n      { value: 'line', label: 'Line', description: 'Connected data points' },\r\n      { value: 'area', label: 'Area', description: 'Filled area under the line' },\r\n      { value: 'bar', label: 'Bar', description: 'Vertical bars' }\r\n    ];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { \r\n  INCIDENT_TREND_DATA,\r\n  KRI_BREACH_DATA,\r\n  CONTROL_EFFECTIVENESS_DATA,\r\n  LOSS_EVENT_DATA,\r\n  AUDIT_AGING_DATA,\r\n  APPETITE_UTILIZATION_DATA,\r\n  RISK_HEATMAP_DATA,\r\n  DATASET_CONFIGS,\r\n  CHART_COLORS\r\n} from '../data/sample-datasets';\r\nimport { ChartDataType, DatasetConfig } from '../models/chart.data';\r\nimport { GlobalFilters } from '../models/dashboard.layout';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private dataCache = new Map<string, ChartDataType[]>();\r\n  private lastRefresh = new Map<string, Date>();\r\n\r\n  constructor() {\r\n    this.initializeCache();\r\n  }\r\n\r\n  // Get data for a specific dataset\r\n  getData(datasetId: string, filters?: GlobalFilters): Observable<ChartDataType[]> {\r\n    const cacheKey = this.getCacheKey(datasetId, filters);\r\n    \r\n    if (this.dataCache.has(cacheKey)) {\r\n      return of(this.dataCache.get(cacheKey)!).pipe(delay(100));\r\n    }\r\n\r\n    return this.fetchData(datasetId, filters).pipe(\r\n      map(data => {\r\n        this.dataCache.set(cacheKey, data);\r\n        this.lastRefresh.set(datasetId, new Date());\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Get dataset configuration\r\n  getDatasetConfig(datasetId: string): DatasetConfig | undefined {\r\n    return DATASET_CONFIGS.find(config => config.id === datasetId);\r\n  }\r\n\r\n  // Get all available datasets\r\n  getAvailableDatasets(): Observable<DatasetConfig[]> {\r\n    return of(DATASET_CONFIGS).pipe(delay(50));\r\n  }\r\n\r\n  // Get chart colors\r\n  getChartColors(): typeof CHART_COLORS {\r\n    return CHART_COLORS;\r\n  }\r\n\r\n  // Refresh data for a dataset\r\n  refreshData(datasetId: string, filters?: GlobalFilters): Observable<ChartDataType[]> {\r\n    const cacheKey = this.getCacheKey(datasetId, filters);\r\n    this.dataCache.delete(cacheKey);\r\n    return this.getData(datasetId, filters);\r\n  }\r\n\r\n  // Get data summary for a dataset\r\n  getDataSummary(datasetId: string, filters?: GlobalFilters): Observable<{\r\n    totalRecords: number;\r\n    lastUpdated: Date;\r\n    fields: string[];\r\n    sampleData: ChartDataType[];\r\n  }> {\r\n    return this.getData(datasetId, filters).pipe(\r\n      map(data => ({\r\n        totalRecords: data.length,\r\n        lastUpdated: this.lastRefresh.get(datasetId) || new Date(),\r\n        fields: data.length > 0 ? Object.keys(data[0]) : [],\r\n        sampleData: data.slice(0, 5)\r\n      }))\r\n    );\r\n  }\r\n\r\n  // Apply filters to data\r\n  applyFilters(data: ChartDataType[], filters: GlobalFilters): ChartDataType[] {\r\n    let filteredData = [...data];\r\n\r\n    // Apply date range filter\r\n    if (filters.dateRange !== 'custom' && filters.dateRange !== 'MTD') {\r\n      filteredData = this.filterByDateRange(filteredData, filters.dateRange);\r\n    }\r\n\r\n    // Apply business unit filter\r\n    if (filters.businessUnit !== 'All') {\r\n      filteredData = this.filterByBusinessUnit(filteredData, filters.businessUnit);\r\n    }\r\n\r\n    // Apply risk category filter\r\n    if (filters.riskCategory !== 'All') {\r\n      filteredData = this.filterByRiskCategory(filteredData, filters.riskCategory);\r\n    }\r\n\r\n    // Apply severity filter\r\n    if (filters.severity > 1) {\r\n      filteredData = this.filterBySeverity(filteredData, filters.severity);\r\n    }\r\n\r\n    return filteredData;\r\n  }\r\n\r\n  // Export data\r\n  exportData(datasetId: string, format: 'csv' | 'json' | 'excel', filters?: GlobalFilters): Observable<Blob> {\r\n    return this.getData(datasetId, filters).pipe(\r\n      map(data => {\r\n        switch (format) {\r\n          case 'csv':\r\n            return this.convertToCSV(data);\r\n          case 'json':\r\n            return this.convertToJSON(data);\r\n          case 'excel':\r\n            return this.convertToExcel(data);\r\n          default:\r\n            throw new Error('Unsupported export format');\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Private methods\r\n  private initializeCache(): void {\r\n    // Pre-load some commonly used datasets\r\n    this.dataCache.set('incident-trend', INCIDENT_TREND_DATA);\r\n    this.dataCache.set('kri-breaches', KRI_BREACH_DATA);\r\n    this.dataCache.set('control-effectiveness', CONTROL_EFFECTIVENESS_DATA);\r\n    this.dataCache.set('loss-events', LOSS_EVENT_DATA);\r\n    this.dataCache.set('audit-aging', AUDIT_AGING_DATA);\r\n    this.dataCache.set('appetite-utilization', APPETITE_UTILIZATION_DATA);\r\n    this.dataCache.set('risk-heatmap', RISK_HEATMAP_DATA);\r\n  }\r\n\r\n  private fetchData(datasetId: string, filters?: GlobalFilters): Observable<ChartDataType[]> {\r\n    let data: ChartDataType[] = [];\r\n\r\n    switch (datasetId) {\r\n      case 'incident-trend':\r\n        data = INCIDENT_TREND_DATA;\r\n        break;\r\n      case 'kri-breaches':\r\n        data = KRI_BREACH_DATA;\r\n        break;\r\n      case 'control-effectiveness':\r\n        data = CONTROL_EFFECTIVENESS_DATA;\r\n        break;\r\n      case 'loss-events':\r\n        data = LOSS_EVENT_DATA;\r\n        break;\r\n      case 'audit-aging':\r\n        data = AUDIT_AGING_DATA;\r\n        break;\r\n      case 'appetite-utilization':\r\n        data = APPETITE_UTILIZATION_DATA;\r\n        break;\r\n      case 'risk-heatmap':\r\n        data = RISK_HEATMAP_DATA;\r\n        break;\r\n      default:\r\n        data = [];\r\n    }\r\n\r\n    // Apply filters if provided\r\n    if (filters) {\r\n      data = this.applyFilters(data, filters);\r\n    }\r\n\r\n    return of(data).pipe(delay(200)); // Simulate API call\r\n  }\r\n\r\n  private getCacheKey(datasetId: string, filters?: GlobalFilters): string {\r\n    if (!filters) return datasetId;\r\n    \r\n    return `${datasetId}_${JSON.stringify(filters)}`;\r\n  }\r\n\r\n  private filterByDateRange(data: ChartDataType[], dateRange: string): ChartDataType[] {\r\n    const now = new Date();\r\n    let startDate: Date;\r\n\r\n    switch (dateRange) {\r\n      case 'QTD':\r\n        startDate = new Date(now.getFullYear(), Math.floor(now.getMonth() / 3) * 3, 1);\r\n        break;\r\n      case 'YTD':\r\n        startDate = new Date(now.getFullYear(), 0, 1);\r\n        break;\r\n      case '12M':\r\n        startDate = new Date(now.getFullYear() - 1, now.getMonth(), now.getDate());\r\n        break;\r\n      default:\r\n        return data;\r\n    }\r\n\r\n    return data.filter(item => {\r\n      const itemDate = this.getDateFromItem(item);\r\n      return itemDate >= startDate && itemDate <= now;\r\n    });\r\n  }\r\n\r\n  private filterByBusinessUnit(data: ChartDataType[], businessUnit: string): ChartDataType[] {\r\n    // This would filter based on business unit field if it exists\r\n    // For now, return all data\r\n    return data;\r\n  }\r\n\r\n  private filterByRiskCategory(data: ChartDataType[], riskCategory: string): ChartDataType[] {\r\n    // This would filter based on risk category field if it exists\r\n    // For now, return all data\r\n    return data;\r\n  }\r\n\r\n  private filterBySeverity(data: ChartDataType[], severity: number): ChartDataType[] {\r\n    return data.filter(item => {\r\n      const itemSeverity = this.getSeverityFromItem(item);\r\n      return itemSeverity >= severity;\r\n    });\r\n  }\r\n\r\n  private getDateFromItem(item: ChartDataType): Date {\r\n    // Try to find a date field in the item\r\n    for (const [key, value] of Object.entries(item)) {\r\n      if (value instanceof Date) {\r\n        return value;\r\n      }\r\n      if (key.toLowerCase().includes('date') && typeof value === 'string') {\r\n        return new Date(value);\r\n      }\r\n    }\r\n    return new Date();\r\n  }\r\n\r\n  private getSeverityFromItem(item: ChartDataType): number {\r\n    // Try to find a severity field in the item\r\n    for (const [key, value] of Object.entries(item)) {\r\n      if (key.toLowerCase().includes('severity') && typeof value === 'number') {\r\n        return value;\r\n      }\r\n    }\r\n    return 1; // Default severity\r\n  }\r\n\r\n  private convertToCSV(data: ChartDataType[]): Blob {\r\n    if (data.length === 0) return new Blob([''], { type: 'text/csv' });\r\n\r\n    const headers = Object.keys(data[0]);\r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...data.map(row => headers.map(header => this.escapeCSVValue(row[header])).join(','))\r\n    ].join('\\n');\r\n\r\n    return new Blob([csvContent], { type: 'text/csv' });\r\n  }\r\n\r\n  private convertToJSON(data: ChartDataType[]): Blob {\r\n    const jsonContent = JSON.stringify(data, null, 2);\r\n    return new Blob([jsonContent], { type: 'application/json' });\r\n  }\r\n\r\n  private convertToExcel(data: ChartDataType[]): Blob {\r\n    // This would require a library like xlsx\r\n    // For now, return CSV as Excel\r\n    return this.convertToCSV(data);\r\n  }\r\n\r\n  private escapeCSVValue(value: any): string {\r\n    if (value === null || value === undefined) return '';\r\n    \r\n    const stringValue = String(value);\r\n    if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\r\n      return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\r\n    }\r\n    \r\n    return stringValue;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { debounceTime, Subscription } from 'rxjs';\r\nimport { LayoutService } from '../../../service/layout.service';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-chart-widget',\r\n  standalone: true,\r\n  imports: [CommonModule, ChartModule],\r\n  template: `\r\n    <div class=\"card h-full\" [ngClass]=\"widgetConfig.style\">\r\n      <div class=\"card-header flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h5 class=\"m-0\">{{ widgetConfig.name }}</h5>\r\n          <p class=\"text-sm text-surface-500 m-0\">{{ widgetConfig.description }}</p>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-cog\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onConfigure()\"\r\n            pTooltip=\"Configure Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-copy\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onDuplicate()\"\r\n            pTooltip=\"Duplicate Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-trash\" \r\n            class=\"p-button-text p-button-sm p-button-danger\"\r\n            (click)=\"onDelete()\"\r\n            pTooltip=\"Delete Widget\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"chart-container\" [style.height.px]=\"chartHeight\">\r\n          <p-chart \r\n            [type]=\"chartType\" \r\n            [data]=\"chartData\" \r\n            [options]=\"chartOptions\"\r\n            [height]=\"chartHeight.toString()\">\r\n          </p-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chart-container {\r\n      position: relative;\r\n      width: 100%;\r\n    }\r\n    \r\n    .card {\r\n      transition: all 0.3s ease;\r\n    }\r\n    \r\n    .card:hover {\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    }\r\n  `]\r\n})\r\nexport class ChartWidgetComponent implements OnInit, OnDestroy {\r\n  @Input() widgetConfig!: WidgetConfig;\r\n  @Input() chartHeight: number = 300;\r\n\r\n  layoutService = inject(LayoutService);\r\n  dataService = inject(DataService);\r\n\r\n  chartData: any = {};\r\n  chartOptions: any = {};\r\n  chartType: 'line' | 'bar' | 'pie' | 'doughnut' | 'polarArea' | 'radar' = 'line';\r\n  \r\n  private rawData: any[] = [];\r\n  private subscription?: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.initializeChart();\r\n    this.subscription = this.layoutService.configUpdate$.pipe(debounceTime(25)).subscribe(() => {\r\n      this.updateTheme();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initializeChart() {\r\n    if (!this.widgetConfig) return;\r\n\r\n    this.chartType = this.getChartType();\r\n    this.loadData();\r\n    this.updateChartOptions();\r\n  }\r\n\r\n  private updateTheme() {\r\n    if (this.rawData && this.rawData.length > 0) {\r\n      this.chartData = this.processDataForChart(this.rawData);\r\n    }\r\n    this.updateChartOptions();\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.getData(this.widgetConfig.dataset).subscribe(data => {\r\n      this.rawData = data;\r\n      this.chartData = this.processDataForChart(data);\r\n    });\r\n  }\r\n\r\n  private processDataForChart(data: any[]): any {\r\n    if (!data || data.length === 0) {\r\n      return { labels: [], datasets: [] };\r\n    }\r\n\r\n    const documentStyle = getComputedStyle(document.documentElement);\r\n\r\n    // Max 4 unique theme colors, then repeat\r\n    const themeColors = [\r\n      documentStyle.getPropertyValue('--p-primary-500'),\r\n      documentStyle.getPropertyValue('--p-primary-200'),\r\n      documentStyle.getPropertyValue('--p-indigo-400'),\r\n      documentStyle.getPropertyValue('--p-purple-400')\r\n    ].map(c => c.trim());\r\n\r\n    const labels = data.map(item => item[this.widgetConfig.xField]);\r\n\r\n    // Handle pie/doughnut/polar differently (multiple slices per dataset)\r\n    if (['pie', 'doughnut', 'polarArea'].includes(this.chartType)) {\r\n      return {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            data: this.widgetConfig.series.map(s => data.map(item => item[s.field])).flat(),\r\n            backgroundColor: themeColors.slice(0, labels.length),\r\n            hoverBackgroundColor: themeColors.slice(0, labels.length)\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    // Line, bar, radar → multiple datasets, each gets distinct color\r\n    const datasets = this.widgetConfig.series.map((series, index) => {\r\n      const color = themeColors[index % themeColors.length];\r\n      let backgroundColor = color;\r\n\r\n      if (series.type === 'area') {\r\n        backgroundColor = this.hexToRgba(color, 0.3);\r\n      }\r\n\r\n      return {\r\n        label: series.label,\r\n        data: data.map(item => item[series.field]),\r\n        borderColor: color,\r\n        backgroundColor,\r\n        fill: series.type === 'area',\r\n        tension: 0.4,\r\n        yAxisID: series.yAxis\r\n      };\r\n    });\r\n\r\n    return { labels, datasets };\r\n  }\r\n\r\n  private updateChartOptions() {\r\n    const documentStyle = getComputedStyle(document.documentElement);\r\n    const textColor = documentStyle.getPropertyValue('--text-color');\r\n    const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\r\n    const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\r\n    \r\n    this.chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: this.widgetConfig.showLegend,\r\n          position: 'top',\r\n          labels: {\r\n            color: textColor,\r\n            usePointStyle: true,\r\n            padding: 20\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: this.widgetConfig.showTooltip,\r\n          backgroundColor: documentStyle.getPropertyValue('--surface-800'),\r\n          titleColor: textColor,\r\n          bodyColor: textColorSecondary,\r\n          borderColor: surfaceBorder,\r\n          borderWidth: 1,\r\n          cornerRadius: 4,\r\n          displayColors: true\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: true,\r\n          grid: {\r\n            display: this.widgetConfig.showGrid,\r\n            color: surfaceBorder,\r\n            drawBorder: false\r\n          },\r\n          ticks: {\r\n            color: textColorSecondary,\r\n            font: {\r\n              weight: 500\r\n            }\r\n          }\r\n        },\r\n        y: {\r\n          display: true,\r\n          grid: {\r\n            display: this.widgetConfig.showGrid,\r\n            color: surfaceBorder,\r\n            drawBorder: false\r\n          },\r\n          ticks: {\r\n            color: textColorSecondary,\r\n            font: {\r\n              weight: 500\r\n            }\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false,\r\n        mode: 'index'\r\n      }\r\n    };\r\n\r\n    if (this.widgetConfig.appetiteBands.length > 0) {\r\n      this.addAppetiteBands();\r\n    }\r\n  }\r\n\r\n  private addAppetiteBands() {\r\n    if (!this.chartOptions.scales) return;\r\n\r\n    const documentStyle = getComputedStyle(document.documentElement);\r\n    const textColor = documentStyle.getPropertyValue('--text-color');\r\n\r\n    this.widgetConfig.appetiteBands.forEach(band => {\r\n      if (!this.chartOptions.scales.y.plugins) {\r\n        this.chartOptions.scales.y.plugins = {};\r\n      }\r\n      \r\n      if (!this.chartOptions.scales.y.plugins.annotation) {\r\n        this.chartOptions.scales.y.plugins.annotation = {\r\n          annotations: {}\r\n        };\r\n      }\r\n\r\n      const annotationId = `band_${band.id}`;\r\n      this.chartOptions.scales.y.plugins.annotation.annotations[annotationId] = {\r\n        type: 'line',\r\n        yMin: band.value,\r\n        yMax: band.value,\r\n        borderColor: band.color || '#ff9900',\r\n        borderWidth: 2,\r\n        borderDash: band.dashed ? [5, 5] : [],\r\n        label: {\r\n          content: band.label,\r\n          enabled: true,\r\n          position: 'end',\r\n          backgroundColor: documentStyle.getPropertyValue('--surface-800'),\r\n          color: textColor\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private getChartType(): 'line' | 'bar' | 'pie' | 'doughnut' | 'polarArea' | 'radar' {\r\n    switch (this.widgetConfig.type) {\r\n      case 'area':\r\n        return 'line';\r\n      case 'line':\r\n        return 'line';\r\n      case 'bar':\r\n        return 'bar';\r\n      case 'pie':\r\n        return 'pie';\r\n      case 'radar':\r\n        return 'radar';\r\n      case 'polarArea':\r\n        return 'polarArea';\r\n      case 'doughnut':\r\n        return 'doughnut';\r\n      default:\r\n        return 'line';\r\n    }\r\n  }\r\n\r\n  private hexToRgba(hex: string, alpha: number): string {\r\n    const r = parseInt(hex.slice(1, 3), 16);\r\n    const g = parseInt(hex.slice(3, 5), 16);\r\n    const b = parseInt(hex.slice(5, 7), 16);\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n  }\r\n\r\n  onConfigure() {\r\n    console.log('Configure widget:', this.widgetConfig.id);\r\n  }\r\n\r\n  onDuplicate() {\r\n    console.log('Duplicate widget:', this.widgetConfig.id);\r\n  }\r\n\r\n  onDelete() {\r\n    console.log('Delete widget:', this.widgetConfig.id);\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { debounceTime, Subscription } from 'rxjs';\r\nimport { LayoutService } from '../../../service/layout.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-incident-trend-widget',\r\n  standalone: true,\r\n  imports: [CommonModule, ChartModule],\r\n  template: `\r\n    <div class=\"card h-full\">\r\n      <div class=\"card-header flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h5 class=\"m-0\">Incident Trend</h5>\r\n          <p class=\"text-sm text-surface-500 m-0\">12-month view</p>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-cog\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onConfigure()\"\r\n            pTooltip=\"Configure Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-copy\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onDuplicate()\"\r\n            pTooltip=\"Duplicate Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-trash\" \r\n            class=\"p-button-text p-button-sm p-button-danger\"\r\n            (click)=\"onDelete()\"\r\n            pTooltip=\"Delete Widget\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"chart-container\" [style.height.px]=\"chartHeight\">\r\n          <p-chart \r\n            type=\"line\" \r\n            [data]=\"chartData\" \r\n            [options]=\"chartOptions\"\r\n            [height]=\"chartHeight.toString()\">\r\n          </p-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chart-container {\r\n      position: relative;\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class IncidentTrendWidgetComponent implements OnInit, OnDestroy {\r\n  @Input() widgetConfig?: WidgetConfig;\r\n  @Input() chartHeight: number = 300;\r\n\r\n  layoutService = inject(LayoutService);\r\n  dataService = inject(DataService);\r\n\r\n  chartData: any = {};\r\n  chartOptions: any = {};\r\n  \r\n  private subscription?: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.initializeChart();\r\n    this.subscription = this.layoutService.configUpdate$.pipe(debounceTime(25)).subscribe(() => {\r\n      this.updateChartOptions();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initializeChart() {\r\n    this.loadData();\r\n    this.updateChartOptions();\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.getData('incident-trend').subscribe(data => {\r\n      this.chartData = this.processDataForChart(data);\r\n    });\r\n  }\r\n\r\n  private processDataForChart(data: any[]): any {\r\n    const labels = data.map(item => item.month);\r\n    const datasets = [\r\n      {\r\n        label: 'Incidents',\r\n        data: data.map(item => item.incidents),\r\n        borderColor: '#6366f1',\r\n        backgroundColor: 'rgba(99, 102, 241, 0.1)',\r\n        fill: true,\r\n        tension: 0.4,\r\n        yAxisID: 'y'\r\n      },\r\n      {\r\n        label: 'Severity',\r\n        data: data.map(item => item.severity),\r\n        borderColor: '#f97316',\r\n        backgroundColor: 'rgba(249, 115, 22, 0.1)',\r\n        fill: false,\r\n        tension: 0.4,\r\n        yAxisID: 'y1'\r\n      }\r\n    ];\r\n\r\n    return { labels, datasets };\r\n  }\r\n\r\n  private updateChartOptions() {\r\n    const isDark = this.layoutService.layoutConfig().darkTheme;\r\n    \r\n    this.chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: true,\r\n          position: 'top',\r\n          labels: {\r\n            color: isDark ? '#ffffff' : '#333333',\r\n            usePointStyle: true,\r\n            padding: 20\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          backgroundColor: isDark ? '#2d3748' : '#ffffff',\r\n          titleColor: isDark ? '#ffffff' : '#333333',\r\n          bodyColor: isDark ? '#ffffff' : '#333333',\r\n          borderColor: isDark ? '#4a5568' : '#e2e8f0',\r\n          borderWidth: 1\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: true,\r\n          grid: {\r\n            display: true,\r\n            color: isDark ? '#4a5568' : '#e2e8f0'\r\n          },\r\n          ticks: {\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          }\r\n        },\r\n        y: {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          grid: {\r\n            display: true,\r\n            color: isDark ? '#4a5568' : '#e2e8f0'\r\n          },\r\n          ticks: {\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Incidents',\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          }\r\n        },\r\n        y1: {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          grid: {\r\n            drawOnChartArea: false,\r\n          },\r\n          ticks: {\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Severity',\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false,\r\n        mode: 'index'\r\n      }\r\n    };\r\n  }\r\n\r\n  onConfigure() {\r\n    console.log('Configure incident trend widget');\r\n  }\r\n\r\n  onDuplicate() {\r\n    console.log('Duplicate incident trend widget');\r\n  }\r\n\r\n  onDelete() {\r\n    console.log('Delete incident trend widget');\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { debounceTime, Subscription } from 'rxjs';\r\nimport { LayoutService } from '../../../service/layout.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-kri-breaches-widget',\r\n  standalone: true,\r\n  imports: [CommonModule, ChartModule],\r\n  template: `\r\n    <div class=\"card h-full\">\r\n      <div class=\"card-header flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h5 class=\"m-0\">KRI Breaches by Risk Type</h5>\r\n          <p class=\"text-sm text-surface-500 m-0\">MTD</p>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-cog\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onConfigure()\"\r\n            pTooltip=\"Configure Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-copy\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onDuplicate()\"\r\n            pTooltip=\"Duplicate Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-trash\" \r\n            class=\"p-button-text p-button-sm p-button-danger\"\r\n            (click)=\"onDelete()\"\r\n            pTooltip=\"Delete Widget\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"chart-container\" [style.height.px]=\"chartHeight\">\r\n          <p-chart \r\n            type=\"bar\" \r\n            [data]=\"chartData\" \r\n            [options]=\"chartOptions\"\r\n            [height]=\"chartHeight.toString()\">\r\n          </p-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chart-container {\r\n      position: relative;\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class KriBreachesWidgetComponent implements OnInit, OnDestroy {\r\n  @Input() widgetConfig?: WidgetConfig;\r\n  @Input() chartHeight: number = 300;\r\n\r\n  layoutService = inject(LayoutService);\r\n  dataService = inject(DataService);\r\n\r\n  chartData: any = {};\r\n  chartOptions: any = {};\r\n  \r\n  private subscription?: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.initializeChart();\r\n    this.subscription = this.layoutService.configUpdate$.pipe(debounceTime(25)).subscribe(() => {\r\n      this.updateChartOptions();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initializeChart() {\r\n    this.loadData();\r\n    this.updateChartOptions();\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.getData('kri-breaches').subscribe(data => {\r\n      this.chartData = this.processDataForChart(data);\r\n    });\r\n  }\r\n\r\n  private processDataForChart(data: any[]): any {\r\n    const labels = data.map(item => item.name);\r\n    const datasets = [\r\n      {\r\n        label: 'Breaches',\r\n        data: data.map(item => item.breaches),\r\n        backgroundColor: data.map((item, index) => {\r\n          const colors = ['#22c55e', '#f97316', '#06b6d4', '#ef4444', '#a855f7', '#8b5cf6', '#ec4899'];\r\n          return colors[index % colors.length];\r\n        }),\r\n        borderColor: data.map((item, index) => {\r\n          const colors = ['#16a34a', '#ea580c', '#0891b2', '#dc2626', '#9333ea', '#7c3aed', '#db2777'];\r\n          return colors[index % colors.length];\r\n        }),\r\n        borderWidth: 1,\r\n        borderRadius: 6,\r\n        borderSkipped: false\r\n      },\r\n      {\r\n        label: 'Threshold',\r\n        data: data.map(item => item.threshold),\r\n        type: 'line',\r\n        borderColor: '#ef4444',\r\n        backgroundColor: 'transparent',\r\n        borderWidth: 2,\r\n        borderDash: [5, 5],\r\n        pointRadius: 0,\r\n        pointHoverRadius: 4\r\n      }\r\n    ];\r\n\r\n    return { labels, datasets };\r\n  }\r\n\r\n  private updateChartOptions() {\r\n    const isDark = this.layoutService.layoutConfig().darkTheme;\r\n    \r\n    this.chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: true,\r\n          position: 'top',\r\n          labels: {\r\n            color: isDark ? '#ffffff' : '#333333',\r\n            usePointStyle: true,\r\n            padding: 20\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          backgroundColor: isDark ? '#2d3748' : '#ffffff',\r\n          titleColor: isDark ? '#ffffff' : '#333333',\r\n          bodyColor: isDark ? '#ffffff' : '#333333',\r\n          borderColor: isDark ? '#4a5568' : '#e2e8f0',\r\n          borderWidth: 1,\r\n          callbacks: {\r\n            afterLabel: (context: any) => {\r\n              const dataIndex = context.dataIndex;\r\n              const data = this.chartData.datasets[0].data[dataIndex];\r\n              const threshold = this.chartData.datasets[1].data[dataIndex];\r\n              const trend = context.raw.trend || 'stable';\r\n              return [\r\n                `Threshold: ${threshold}`,\r\n                `Trend: ${trend}`\r\n              ];\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: true,\r\n          grid: {\r\n            display: true,\r\n            color: isDark ? '#4a5568' : '#e2e8f0'\r\n          },\r\n          ticks: {\r\n            color: isDark ? '#a0aec0' : '#718096',\r\n            maxRotation: 45\r\n          }\r\n        },\r\n        y: {\r\n          display: true,\r\n          beginAtZero: true,\r\n          grid: {\r\n            display: true,\r\n            color: isDark ? '#4a5568' : '#e2e8f0'\r\n          },\r\n          ticks: {\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Number of Breaches',\r\n            color: isDark ? '#a0aec0' : '#718096'\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false,\r\n        mode: 'index'\r\n      }\r\n    };\r\n  }\r\n\r\n  onConfigure() {\r\n    console.log('Configure KRI breaches widget');\r\n  }\r\n\r\n  onDuplicate() {\r\n    console.log('Duplicate KRI breaches widget');\r\n  }\r\n\r\n  onDelete() {\r\n    console.log('Delete KRI breaches widget');\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { debounceTime, Subscription } from 'rxjs';\r\nimport { LayoutService } from '../../../service/layout.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-audit-aging-widget',\r\n  standalone: true,\r\n  imports: [CommonModule, ChartModule],\r\n  template: `\r\n    <div class=\"card h-full\">\r\n      <div class=\"card-header flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h5 class=\"m-0\">Audit Findings – Aging</h5>\r\n          <p class=\"text-sm text-surface-500 m-0\">Open items</p>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-cog\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onConfigure()\"\r\n            pTooltip=\"Configure Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-copy\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onDuplicate()\"\r\n            pTooltip=\"Duplicate Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-trash\" \r\n            class=\"p-button-text p-button-sm p-button-danger\"\r\n            (click)=\"onDelete()\"\r\n            pTooltip=\"Delete Widget\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"chart-container\" [style.height.px]=\"chartHeight\">\r\n          <p-chart \r\n            type=\"pie\" \r\n            [data]=\"chartData\" \r\n            [options]=\"chartOptions\"\r\n            [height]=\"chartHeight.toString()\">\r\n          </p-chart>\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <div class=\"flex justify-content-between align-items-center mb-2\" *ngFor=\"let item of legendData\">\r\n            <div class=\"flex align-items-center\">\r\n              <div class=\"w-3 h-3 rounded-circle mr-2\" [style.background-color]=\"item.color\"></div>\r\n              <span class=\"text-sm\">{{ item.label }}</span>\r\n            </div>\r\n            <span class=\"text-sm font-semibold\">{{ item.value }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chart-container {\r\n      position: relative;\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class AuditAgingWidgetComponent implements OnInit, OnDestroy {\r\n  @Input() widgetConfig?: WidgetConfig;\r\n  @Input() chartHeight: number = 300;\r\n\r\n  layoutService = inject(LayoutService);\r\n  dataService = inject(DataService);\r\n\r\n  chartData: any = {};\r\n  chartOptions: any = {};\r\n  legendData: any[] = [];\r\n  \r\n  private subscription?: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.initializeChart();\r\n    this.subscription = this.layoutService.configUpdate$.pipe(debounceTime(25)).subscribe(() => {\r\n      this.updateChartOptions();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initializeChart() {\r\n    this.loadData();\r\n    this.updateChartOptions();\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.getData('audit-aging').subscribe(data => {\r\n      this.chartData = this.processDataForChart(data);\r\n      this.legendData = this.createLegendData(data);\r\n    });\r\n  }\r\n\r\n  private processDataForChart(data: any[]): any {\r\n    const labels = data.map(item => item.aging);\r\n    const datasets = [\r\n      {\r\n        data: data.map(item => item.findings),\r\n        backgroundColor: [\r\n          '#22c55e',\r\n          '#eab308',\r\n          '#f97316',\r\n          '#ef4444'\r\n        ],\r\n        borderColor: [\r\n          '#16a34a',\r\n          '#ca8a04',\r\n          '#ea580c',\r\n          '#dc2626'\r\n        ],\r\n        borderWidth: 2,\r\n        hoverOffset: 4\r\n      }\r\n    ];\r\n\r\n    return { labels, datasets };\r\n  }\r\n\r\n  private createLegendData(data: any[]): any[] {\r\n    const colors = ['#22c55e', '#eab308', '#f97316', '#ef4444'];\r\n    return data.map((item, index) => ({\r\n      label: item.aging,\r\n      value: item.findings,\r\n      color: colors[index]\r\n    }));\r\n  }\r\n\r\n  private updateChartOptions() {\r\n    const isDark = this.layoutService.layoutConfig().darkTheme;\r\n    \r\n    this.chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          backgroundColor: isDark ? '#2d3748' : '#ffffff',\r\n          titleColor: isDark ? '#ffffff' : '#333333',\r\n          bodyColor: isDark ? '#ffffff' : '#333333',\r\n          borderColor: isDark ? '#4a5568' : '#e2e8f0',\r\n          borderWidth: 1,\r\n          callbacks: {\r\n            label: (context: any) => {\r\n              const label = context.label || '';\r\n              const value = context.parsed;\r\n              const total = context.dataset.data.reduce((a: number, b: number) => a + b, 0);\r\n              const percentage = ((value / total) * 100).toFixed(1);\r\n              return `${label}: ${value} (${percentage}%)`;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false\r\n      }\r\n    };\r\n  }\r\n\r\n  onConfigure() {\r\n    console.log('Configure audit aging widget');\r\n  }\r\n\r\n  onDuplicate() {\r\n    console.log('Duplicate audit aging widget');\r\n  }\r\n\r\n  onDelete() {\r\n    console.log('Delete audit aging widget');\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { LayoutService } from '../../../service/layout.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-appetite-utilization-widget',\r\n  standalone: true,\r\n  imports: [CommonModule, ProgressBarModule],\r\n  template: `\r\n    <div class=\"card h-full\">\r\n      <div class=\"card-header flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h5 class=\"m-0\">Risk Appetite Utilization</h5>\r\n          <p class=\"text-sm text-surface-500 m-0\">Across key KPIs</p>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-cog\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onConfigure()\"\r\n            pTooltip=\"Configure Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-copy\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onDuplicate()\"\r\n            pTooltip=\"Duplicate Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-trash\" \r\n            class=\"p-button-text p-button-sm p-button-danger\"\r\n            (click)=\"onDelete()\"\r\n            pTooltip=\"Delete Widget\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"space-y-4\">\r\n          <div *ngFor=\"let item of utilizationData\" class=\"utilization-item\">\r\n            <div class=\"flex justify-content-between align-items-center mb-2\">\r\n              <span class=\"text-sm font-medium\" [title]=\"item.kpi\">{{ item.kpi }}</span>\r\n              <span class=\"text-sm font-semibold\" [ngClass]=\"getStatusClass(item.status)\">\r\n                {{ (item.value * 100) | number:'1.0-0' }}%\r\n              </span>\r\n            </div>\r\n            <p-progressBar \r\n              [value]=\"item.value * 100\" \r\n              [showValue]=\"false\"\r\n              [style]=\"getProgressBarStyle(item.status)\">\r\n            </p-progressBar>\r\n            <div class=\"flex justify-content-between text-xs text-surface-500 mt-1\">\r\n              <span>Threshold: {{ (item.threshold * 100) | number:'1.0-0' }}%</span>\r\n              <span [ngClass]=\"getStatusClass(item.status)\">{{ item.status | titlecase }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .utilization-item {\r\n      padding: 0.75rem 0;\r\n      border-bottom: 1px solid var(--surface-200);\r\n    }\r\n    \r\n    .utilization-item:last-child {\r\n      border-bottom: none;\r\n    }\r\n    \r\n    .status-green {\r\n      color: #22c55e;\r\n    }\r\n    \r\n    .status-amber {\r\n      color: #f97316;\r\n    }\r\n    \r\n    .status-red {\r\n      color: #ef4444;\r\n    }\r\n  `]\r\n})\r\nexport class AppetiteUtilizationWidgetComponent implements OnInit, OnDestroy {\r\n  @Input() widgetConfig?: WidgetConfig;\r\n\r\n  layoutService = inject(LayoutService);\r\n  dataService = inject(DataService);\r\n\r\n  utilizationData: any[] = [];\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup if needed\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.getData('appetite-utilization').subscribe(data => {\r\n      this.utilizationData = data;\r\n    });\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status) {\r\n      case 'green':\r\n        return 'status-green';\r\n      case 'amber':\r\n        return 'status-amber';\r\n      case 'red':\r\n        return 'status-red';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getProgressBarStyle(status: string): any {\r\n    const baseStyle = {\r\n      height: '8px',\r\n      borderRadius: '4px'\r\n    };\r\n\r\n    switch (status) {\r\n      case 'green':\r\n        return {\r\n          ...baseStyle,\r\n          '--p-progressbar-background': '#dcfce7',\r\n          '--p-progressbar-value-background': '#22c55e'\r\n        };\r\n      case 'amber':\r\n        return {\r\n          ...baseStyle,\r\n          '--p-progressbar-background': '#fed7aa',\r\n          '--p-progressbar-value-background': '#f97316'\r\n        };\r\n      case 'red':\r\n        return {\r\n          ...baseStyle,\r\n          '--p-progressbar-background': '#fecaca',\r\n          '--p-progressbar-value-background': '#ef4444'\r\n        };\r\n      default:\r\n        return baseStyle;\r\n    }\r\n  }\r\n\r\n  onConfigure() {\r\n    console.log('Configure appetite utilization widget');\r\n  }\r\n\r\n  onDuplicate() {\r\n    console.log('Duplicate appetite utilization widget');\r\n  }\r\n\r\n  onDelete() {\r\n    console.log('Delete appetite utilization widget');\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutService } from '../../../service/layout.service';\r\nimport { DataService } from '../../services/data.service';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-risk-heatmap-widget',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"card h-full\">\r\n      <div class=\"card-header flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h5 class=\"m-0\">Risk Heatmap</h5>\r\n          <p class=\"text-sm text-surface-500 m-0\">Residual risk view</p>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-cog\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onConfigure()\"\r\n            pTooltip=\"Configure Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-copy\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onDuplicate()\"\r\n            pTooltip=\"Duplicate Widget\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-trash\" \r\n            class=\"p-button-text p-button-sm p-button-danger\"\r\n            (click)=\"onDelete()\"\r\n            pTooltip=\"Delete Widget\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"heatmap-container\">\r\n          <div class=\"grid grid-cols-6 gap-2 items-center\">\r\n            <div class=\"text-xs text-surface-500 rotate-[-90deg] origin-left col-span-1 h-full flex items-center justify-center\">\r\n              Likelihood →\r\n            </div>\r\n            <div class=\"col-span-5\">\r\n              <div class=\"grid grid-cols-5 gap-2\">\r\n                <div \r\n                  *ngFor=\"let cell of heatmapData; let i = index\" \r\n                  class=\"h-10 rounded-md flex items-center justify-center text-[10px] text-white font-semibold cursor-pointer hover:opacity-80 transition-opacity\"\r\n                  [ngClass]=\"getRiskClass(cell.riskScore)\"\r\n                  [title]=\"cell.description\"\r\n                  (click)=\"onCellClick(cell)\">\r\n                  {{ cell.likelihood }}:{{ cell.impact }}\r\n                </div>\r\n              </div>\r\n              <div class=\"flex justify-between mt-2 text-[10px] text-surface-500\">\r\n                <span *ngFor=\"let i of [1,2,3,4,5]\">Impact {{ i }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <div class=\"flex justify-center gap-4 text-xs\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <div class=\"w-3 h-3 rounded bg-green-500\"></div>\r\n              <span>Low</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-2\">\r\n              <div class=\"w-3 h-3 rounded bg-yellow-400\"></div>\r\n              <span>Medium</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-2\">\r\n              <div class=\"w-3 h-3 rounded bg-orange-500\"></div>\r\n              <span>High</span>\r\n            </div>\r\n            <div class=\"flex items-center gap-2\">\r\n              <div class=\"w-3 h-3 rounded bg-red-500\"></div>\r\n              <span>Critical</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .heatmap-container {\r\n      position: relative;\r\n      width: 100%;\r\n    }\r\n    \r\n    .risk-low {\r\n      background-color: #22c55e;\r\n    }\r\n    \r\n    .risk-medium {\r\n      background-color: #eab308;\r\n    }\r\n    \r\n    .risk-high {\r\n      background-color: #f97316;\r\n    }\r\n    \r\n    .risk-critical {\r\n      background-color: #ef4444;\r\n    }\r\n  `]\r\n})\r\nexport class RiskHeatmapWidgetComponent implements OnInit, OnDestroy {\r\n  @Input() widgetConfig?: WidgetConfig;\r\n\r\n  layoutService = inject(LayoutService);\r\n  dataService = inject(DataService);\r\n\r\n  heatmapData: any[] = [];\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Cleanup if needed\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.getData('risk-heatmap').subscribe(data => {\r\n      this.heatmapData = data;\r\n    });\r\n  }\r\n\r\n  getRiskClass(riskScore: number): string {\r\n    if (riskScore >= 2.0) return 'risk-critical';\r\n    if (riskScore >= 1.5) return 'risk-high';\r\n    if (riskScore >= 1.0) return 'risk-medium';\r\n    return 'risk-low';\r\n  }\r\n\r\n  onCellClick(cell: any) {\r\n    console.log('Heatmap cell clicked:', cell);\r\n    // Emit event or show details\r\n  }\r\n\r\n  onConfigure() {\r\n    console.log('Configure risk heatmap widget');\r\n  }\r\n\r\n  onDuplicate() {\r\n    console.log('Duplicate risk heatmap widget');\r\n  }\r\n\r\n  onDelete() {\r\n    console.log('Delete risk heatmap widget');\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartWidgetComponent } from '../chart-widget/chart-widget.component';\r\nimport { IncidentTrendWidgetComponent } from '../incident-trend-widget/incident-trend-widget.component';\r\nimport { KriBreachesWidgetComponent } from '../kri-breaches-widget/kri-breaches-widget.component';\r\nimport { AuditAgingWidgetComponent } from '../audit-aging-widget/audit-aging-widget.component';\r\nimport { AppetiteUtilizationWidgetComponent } from '../appetite-utilization-widget/appetite-utilization-widget.component';\r\nimport { RiskHeatmapWidgetComponent } from '../risk-heatmap-widget/risk-heatmap-widget.component';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-widget-renderer',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ChartWidgetComponent,\r\n    IncidentTrendWidgetComponent,\r\n    KriBreachesWidgetComponent,\r\n    AuditAgingWidgetComponent,\r\n    AppetiteUtilizationWidgetComponent,\r\n    RiskHeatmapWidgetComponent\r\n  ],\r\n  template: `\r\n    <div class=\"widget-container\" [ngClass]=\"getWidgetClasses()\">\r\n      <!-- Incident Trend Widget -->\r\n      <app-incident-trend-widget \r\n        *ngIf=\"widgetConfig?.name === 'IncidentTrend'\"\r\n        [widgetConfig]=\"widgetConfig\"\r\n        [chartHeight]=\"getChartHeight()\">\r\n      </app-incident-trend-widget>\r\n\r\n      <!-- KRI Breaches Widget -->\r\n      <app-kri-breaches-widget \r\n        *ngIf=\"widgetConfig?.name === 'KRIBreaches'\"\r\n        [widgetConfig]=\"widgetConfig\"\r\n        [chartHeight]=\"getChartHeight()\">\r\n      </app-kri-breaches-widget>\r\n\r\n\r\n      <!-- Audit Aging Widget -->\r\n      <app-audit-aging-widget \r\n        *ngIf=\"widgetConfig?.name === 'AuditAging'\"\r\n        [widgetConfig]=\"widgetConfig\"\r\n        [chartHeight]=\"getChartHeight()\">\r\n      </app-audit-aging-widget>\r\n\r\n      <!-- Appetite Utilization Widget -->\r\n      <app-appetite-utilization-widget \r\n        *ngIf=\"widgetConfig?.name === 'AppetiteUtilization'\"\r\n        [widgetConfig]=\"widgetConfig\">\r\n      </app-appetite-utilization-widget>\r\n\r\n      <!-- Risk Heatmap Widget -->\r\n      <app-risk-heatmap-widget \r\n        *ngIf=\"widgetConfig?.name === 'RiskHeatmap'\"\r\n        [widgetConfig]=\"widgetConfig\">\r\n      </app-risk-heatmap-widget>\r\n\r\n      <!-- Generic Chart Widget for other types -->\r\n      <app-chart-widget \r\n        *ngIf=\"!isPredefinedWidget() && widgetConfig\"\r\n        [widgetConfig]=\"widgetConfig\"\r\n        [chartHeight]=\"getChartHeight()\">\r\n      </app-chart-widget>\r\n\r\n      <!-- Widget not found -->\r\n      <div \r\n        *ngIf=\"!widgetConfig\" \r\n        class=\"card h-full flex align-items-center justify-content-center text-surface-500\">\r\n        <div class=\"text-center\">\r\n          <i class=\"pi pi-exclamation-triangle text-2xl mb-2\"></i>\r\n          <p>Widget configuration not found</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .widget-container {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    \r\n    .widget-dragging {\r\n      opacity: 0.5;\r\n      transform: rotate(5deg);\r\n    }\r\n    \r\n    .widget-selected {\r\n      border: 2px solid var(--primary-color);\r\n      border-radius: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class WidgetRendererComponent implements OnInit {\r\n  @Input() widgetConfig?: WidgetConfig;\r\n  @Input() isDragging: boolean = false;\r\n  @Input() isSelected: boolean = false;\r\n  @Input() gridSize: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  ngOnInit() {\r\n    // Component initialization\r\n  }\r\n\r\n  isPredefinedWidget(): boolean {\r\n    if (!this.widgetConfig) return false;\r\n    \r\n    const predefinedWidgets = [\r\n      'IncidentTrend',\r\n      'KRIBreaches', \r\n      'ControlEffectiveness',\r\n      'AuditAging',\r\n      'AppetiteUtilization',\r\n      'RiskHeatmap'\r\n    ];\r\n    \r\n    return predefinedWidgets.includes(this.widgetConfig.name);\r\n  }\r\n\r\n  getWidgetClasses(): string {\r\n    const classes = ['widget-container'];\r\n    \r\n    if (this.isDragging) {\r\n      classes.push('widget-dragging');\r\n    }\r\n    \r\n    if (this.isSelected) {\r\n      classes.push('widget-selected');\r\n    }\r\n    \r\n    return classes.join(' ');\r\n  }\r\n\r\n  getChartHeight(): number {\r\n    switch (this.gridSize) {\r\n      case 'sm':\r\n        return 200;\r\n      case 'md':\r\n        return 300;\r\n      case 'lg':\r\n        return 400;\r\n      default:\r\n        return 300;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CdkDragDrop, CdkDrag, CdkDropList, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { WidgetService } from '../../services/widget.service';\r\nimport { WidgetRendererComponent } from '../widget-renderer/widget-renderer.component';\r\nimport { WidgetConfig } from '../../models/widget.config';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-canvas',\r\n  standalone: true,\r\n  imports: [CommonModule, CdkDrag, CdkDropList, WidgetRendererComponent, ButtonModule],\r\n  template: `\r\n    <div class=\"dashboard-canvas\">\r\n      <!-- Canvas Header -->\r\n      <div class=\"canvas-header mb-4\">\r\n        <div class=\"flex justify-content-between align-items-center\">\r\n          <div>\r\n            <h3 class=\"m-0\">Dashboard Canvas</h3>\r\n            <p class=\"text-sm text-surface-500 m-0\">Drag to reorder • Click to configure • Add more widgets</p>\r\n          </div>\r\n          <div class=\"flex gap-2 ml-2\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Add Widget\" \r\n              icon=\"pi pi-plus\" \r\n              class=\"p-button-outlined\"\r\n              (click)=\"onAddWidget()\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Save Layout\" \r\n              icon=\"pi pi-save\" \r\n              class=\"p-button\"\r\n              (click)=\"onSaveLayout()\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Widget Grid -->\r\n      <div \r\n        cdkDropList\r\n        (cdkDropListDropped)=\"onWidgetDrop($event)\"\r\n        class=\"widget-grid\"\r\n        [ngClass]=\"getGridClasses()\">\r\n        \r\n        <div \r\n          *ngFor=\"let widget of widgets; let i = index; trackBy: trackByWidgetId\"\r\n          cdkDrag\r\n          [cdkDragData]=\"widget\"\r\n          class=\"widget-item\"\r\n          [ngClass]=\"getWidgetItemClasses(widget, i)\"\r\n          (click)=\"onWidgetClick(widget, i)\">\r\n          \r\n          <div class=\"widget-drag-handle\" cdkDragHandle>\r\n            <i class=\"pi pi-grip-vertical\"></i>\r\n          </div>\r\n          \r\n          <div class=\"widget-content\">\r\n            <app-widget-renderer \r\n              [widgetConfig]=\"widget\"\r\n              [isSelected]=\"selectedWidgetId === widget.id\"\r\n              [gridSize]=\"getGridSize()\">\r\n            </app-widget-renderer>\r\n          </div>\r\n          \r\n          <!-- Widget Actions -->\r\n          <div class=\"widget-actions\" *ngIf=\"selectedWidgetId === widget.id\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              icon=\"pi pi-cog\" \r\n              class=\"p-button-text p-button-sm\"\r\n              (click)=\"onConfigureWidget(widget, $event)\"\r\n              pTooltip=\"Configure\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              icon=\"pi pi-copy\" \r\n              class=\"p-button-text p-button-sm\"\r\n              (click)=\"onDuplicateWidget(widget, $event)\"\r\n              pTooltip=\"Duplicate\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              icon=\"pi pi-trash\" \r\n              class=\"p-button-text p-button-sm p-button-danger\"\r\n              (click)=\"onDeleteWidget(widget, $event)\"\r\n              pTooltip=\"Delete\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Empty State -->\r\n        <div \r\n          *ngIf=\"widgets.length === 0\" \r\n          class=\"empty-state\"\r\n          cdkDropList\r\n          (cdkDropListDropped)=\"onEmptyStateDrop($event)\">\r\n          <div class=\"text-center p-6\">\r\n            <i class=\"pi pi-plus-circle text-4xl text-surface-400 mb-3\"></i>\r\n            <h4 class=\"text-surface-600 mb-2\">No widgets yet</h4>\r\n            <p class=\"text-surface-500 mb-4\">Drag widgets from the library or click \"Add Widget\" to get started</p>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Add Your First Widget\" \r\n              icon=\"pi pi-plus\" \r\n              class=\"p-button-outlined\"\r\n              (click)=\"onAddWidget()\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .dashboard-canvas {\r\n      width: 100%;\r\n      min-height: 600px;\r\n    }\r\n    \r\n    .canvas-header {\r\n      padding: 1rem 0;\r\n      border-bottom: 1px solid var(--surface-200);\r\n    }\r\n    \r\n    .widget-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n      gap: 1rem;\r\n      padding: 1rem 0;\r\n    }\r\n    \r\n    .widget-grid.compact {\r\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n      gap: 0.75rem;\r\n    }\r\n    \r\n    .widget-grid.spacious {\r\n      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n      gap: 1.5rem;\r\n    }\r\n    \r\n    .widget-item {\r\n      position: relative;\r\n      min-height: 200px;\r\n      border: 2px solid transparent;\r\n      border-radius: 8px;\r\n      transition: all 0.3s ease;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    .widget-item:hover {\r\n      border-color: var(--primary-color);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    }\r\n    \r\n    .widget-item.selected {\r\n      border-color: var(--primary-color);\r\n      box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\r\n    }\r\n    \r\n    .widget-item.cdk-drag-preview {\r\n      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\r\n      transform: rotate(2deg);\r\n    }\r\n    \r\n    .widget-item.cdk-drag-placeholder {\r\n      opacity: 0.3;\r\n      background: var(--surface-100);\r\n      border: 2px dashed var(--surface-300);\r\n    }\r\n    \r\n    .widget-drag-handle {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      z-index: 10;\r\n      opacity: 0;\r\n      transition: opacity 0.3s ease;\r\n      cursor: grab;\r\n    }\r\n    \r\n    .widget-item:hover .widget-drag-handle {\r\n      opacity: 1;\r\n    }\r\n    \r\n    .widget-content {\r\n      height: 100%;\r\n    }\r\n    \r\n    .widget-actions {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n      z-index: 10;\r\n      display: flex;\r\n      gap: 0.25rem;\r\n      opacity: 0;\r\n      transition: opacity 0.3s ease;\r\n    }\r\n    \r\n    .widget-item.selected .widget-actions {\r\n      opacity: 1;\r\n    }\r\n    \r\n    .empty-state {\r\n      grid-column: 1 / -1;\r\n      min-height: 400px;\r\n      border: 2px dashed var(--surface-300);\r\n      border-radius: 8px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .empty-state.cdk-drop-list-dragging {\r\n      border-color: var(--primary-color);\r\n      background: rgba(var(--primary-color-rgb), 0.05);\r\n    }\r\n  `]\r\n})\r\nexport class DashboardCanvasComponent implements OnInit, OnDestroy {\r\n  private dashboardService = inject(DashboardService);\r\n  private widgetService = inject(WidgetService);\r\n\r\n  widgets: WidgetConfig[] = [];\r\n  selectedWidgetId: string | null = null;\r\n  isDragging: boolean = false;\r\n  \r\n  private subscriptions: Subscription[] = [];\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(\r\n      this.dashboardService.widgets$.subscribe(widgets => {\r\n        this.widgets = widgets;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  onWidgetDrop(event: CdkDragDrop<WidgetConfig[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      // Reordering within the same container\r\n      moveItemInArray(this.widgets, event.previousIndex, event.currentIndex);\r\n      this.dashboardService.reorderWidgets(event.previousIndex, event.currentIndex);\r\n    } else {\r\n      // Moving from library to canvas\r\n      transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  onEmptyStateDrop(event: CdkDragDrop<WidgetConfig[]>) {\r\n    // Handle dropping on empty state\r\n    if (event.previousContainer !== event.container) {\r\n      transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  onWidgetClick(widget: WidgetConfig, index: number) {\r\n    this.selectedWidgetId = widget.id;\r\n    this.widgetService.selectWidget(widget);\r\n  }\r\n\r\n  onConfigureWidget(widget: WidgetConfig, event: Event) {\r\n    event.stopPropagation();\r\n    this.widgetService.startConfiguration(widget);\r\n  }\r\n\r\n  onDuplicateWidget(widget: WidgetConfig, event: Event) {\r\n    event.stopPropagation();\r\n    this.dashboardService.duplicateWidget(widget.id);\r\n  }\r\n\r\n  onDeleteWidget(widget: WidgetConfig, event: Event) {\r\n    event.stopPropagation();\r\n    this.dashboardService.removeWidget(widget.id);\r\n    if (this.selectedWidgetId === widget.id) {\r\n      this.selectedWidgetId = null;\r\n    }\r\n  }\r\n\r\n  onAddWidget() {\r\n    this.dashboardService.setShowAddWidget(true);\r\n  }\r\n\r\n  onSaveLayout() {\r\n    // Implement save functionality\r\n    console.log('Saving layout...');\r\n  }\r\n\r\n  trackByWidgetId(index: number, widget: WidgetConfig): string {\r\n    return widget.id;\r\n  }\r\n\r\n  getGridClasses(): string {\r\n    const classes = ['widget-grid'];\r\n    \r\n    // Add responsive classes based on screen size\r\n    if (window.innerWidth < 768) {\r\n      classes.push('compact');\r\n    } else if (window.innerWidth > 1200) {\r\n      classes.push('spacious');\r\n    }\r\n    \r\n    return classes.join(' ');\r\n  }\r\n\r\n  getWidgetItemClasses(widget: WidgetConfig, index: number): string {\r\n    const classes = ['widget-item'];\r\n    \r\n    if (this.selectedWidgetId === widget.id) {\r\n      classes.push('selected');\r\n    }\r\n    \r\n    return classes.join(' ');\r\n  }\r\n\r\n  getGridSize(): 'sm' | 'md' | 'lg' {\r\n    if (window.innerWidth < 768) return 'sm';\r\n    if (window.innerWidth > 1200) return 'lg';\r\n    return 'md';\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CdkDrag } from '@angular/cdk/drag-drop';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { WidgetLibraryItem, WIDGET_CATEGORIES } from '../../templates/prebuilt-templates';\r\n\r\n@Component({\r\n  selector: 'app-widget-library',\r\n  standalone: true,\r\n  imports: [CommonModule, CdkDrag, FormsModule, InputTextModule, DropdownModule],\r\n  template: `\r\n    <div class=\"widget-library\">\r\n      <!-- Library Header -->\r\n      <div class=\"library-header mb-4\">\r\n        <div class=\"flex justify-content-between align-items-center mb-3\">\r\n          <h4 class=\"m-0\">Widget Library</h4>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-times\" \r\n            class=\"p-button-text p-button-sm\"\r\n            (click)=\"onClose()\"\r\n            pTooltip=\"Close Library\">\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Search and Filter -->\r\n        <div class=\"flex gap-3 mb-4\">\r\n          <div class=\"flex-1\">\r\n            <input \r\n              type=\"text\" \r\n              pInputText \r\n              placeholder=\"Search widgets...\" \r\n              [(ngModel)]=\"searchQuery\"\r\n              (ngModelChange)=\"onSearchChange()\"\r\n              class=\"w-full\">\r\n          </div>\r\n          <p-dropdown \r\n            [options]=\"categoryOptions\" \r\n            [(ngModel)]=\"selectedCategory\"\r\n            (ngModelChange)=\"onCategoryChange()\"\r\n            placeholder=\"All Categories\"\r\n            [showClear]=\"true\"\r\n            styleClass=\"w-12rem\">\r\n          </p-dropdown>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Widget Grid -->\r\n      <div class=\"widget-grid\">\r\n        <div \r\n          *ngFor=\"let widget of filteredWidgets; trackBy: trackByWidgetKey\"\r\n          cdkDrag\r\n          [cdkDragData]=\"widget\"\r\n          class=\"widget-card\"\r\n          (click)=\"onWidgetClick(widget)\">\r\n          \r\n          <div class=\"widget-card-header\">\r\n            <div class=\"flex align-items-center gap-2\">\r\n              <i [class]=\"widget.icon\" class=\"text-primary\"></i>\r\n              <h6 class=\"m-0\">{{ widget.label }}</h6>\r\n            </div>\r\n            <span class=\"widget-category\">{{ getCategoryLabel(widget.category) }}</span>\r\n          </div>\r\n          \r\n          <div class=\"widget-card-content\">\r\n            <p class=\"text-sm text-surface-600 mb-3\">{{ widget.description }}</p>\r\n            \r\n            <div class=\"widget-preview\" *ngIf=\"widget.key === 'IncidentTrend'\">\r\n              <div class=\"preview-chart\">\r\n                <div class=\"chart-line\"></div>\r\n                <div class=\"chart-line\"></div>\r\n                <div class=\"chart-line\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"widget-preview\" *ngIf=\"widget.key === 'KRIBreaches'\">\r\n              <div class=\"preview-bars\">\r\n                <div class=\"bar\" style=\"height: 60%\"></div>\r\n                <div class=\"bar\" style=\"height: 40%\"></div>\r\n                <div class=\"bar\" style=\"height: 80%\"></div>\r\n                <div class=\"bar\" style=\"height: 30%\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"widget-preview\" *ngIf=\"widget.key === 'ControlEffectiveness'\">\r\n              <div class=\"preview-radar\">\r\n                <div class=\"radar-center\"></div>\r\n                <div class=\"radar-point\" style=\"top: 20%; left: 30%\"></div>\r\n                <div class=\"radar-point\" style=\"top: 40%; left: 70%\"></div>\r\n                <div class=\"radar-point\" style=\"top: 60%; left: 50%\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"widget-preview\" *ngIf=\"widget.key === 'AuditAging'\">\r\n              <div class=\"preview-pie\">\r\n                <div class=\"pie-slice\" style=\"--rotation: 0deg; --percentage: 25%\"></div>\r\n                <div class=\"pie-slice\" style=\"--rotation: 90deg; --percentage: 35%\"></div>\r\n                <div class=\"pie-slice\" style=\"--rotation: 180deg; --percentage: 25%\"></div>\r\n                <div class=\"pie-slice\" style=\"--rotation: 270deg; --percentage: 15%\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"widget-preview\" *ngIf=\"widget.key === 'AppetiteUtilization'\">\r\n              <div class=\"preview-progress\">\r\n                <div class=\"progress-item\">\r\n                  <div class=\"progress-bar\" style=\"width: 60%\"></div>\r\n                </div>\r\n                <div class=\"progress-item\">\r\n                  <div class=\"progress-bar\" style=\"width: 80%\"></div>\r\n                </div>\r\n                <div class=\"progress-item\">\r\n                  <div class=\"progress-bar\" style=\"width: 45%\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"widget-preview\" *ngIf=\"widget.key === 'RiskHeatmap'\">\r\n              <div class=\"preview-heatmap\">\r\n                <div class=\"heatmap-cell low\"></div>\r\n                <div class=\"heatmap-cell medium\"></div>\r\n                <div class=\"heatmap-cell high\"></div>\r\n                <div class=\"heatmap-cell critical\"></div>\r\n                <div class=\"heatmap-cell low\"></div>\r\n                <div class=\"heatmap-cell medium\"></div>\r\n                <div class=\"heatmap-cell high\"></div>\r\n                <div class=\"heatmap-cell critical\"></div>\r\n                <div class=\"heatmap-cell low\"></div>\r\n                <div class=\"heatmap-cell medium\"></div>\r\n                <div class=\"heatmap-cell high\"></div>\r\n                <div class=\"heatmap-cell critical\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"widget-card-footer\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Add to Dashboard\" \r\n              icon=\"pi pi-plus\" \r\n              class=\"p-button-sm p-button-outlined w-full\"\r\n              (click)=\"onAddWidget(widget, $event)\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Empty State -->\r\n      <div *ngIf=\"filteredWidgets.length === 0\" class=\"empty-state\">\r\n        <i class=\"pi pi-search text-4xl text-surface-400 mb-3\"></i>\r\n        <h5 class=\"text-surface-600 mb-2\">No widgets found</h5>\r\n        <p class=\"text-surface-500\">Try adjusting your search or filter criteria</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .widget-library {\r\n      height: 100%;\r\n      overflow-y: auto;\r\n    }\r\n    \r\n    .library-header {\r\n      position: sticky;\r\n      top: 0;\r\n      background: var(--surface-0);\r\n      z-index: 10;\r\n      padding: 1rem 0;\r\n      border-bottom: 1px solid var(--surface-200);\r\n    }\r\n    \r\n    .widget-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n      gap: 1rem;\r\n      padding: 1rem 0;\r\n    }\r\n    \r\n    .widget-card {\r\n      border: 1px solid var(--surface-200);\r\n      border-radius: 8px;\r\n      padding: 1rem;\r\n      background: var(--surface-0);\r\n      transition: all 0.3s ease;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    .widget-card:hover {\r\n      border-color: var(--primary-color);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n      transform: translateY(-2px);\r\n    }\r\n    \r\n    .widget-card.cdk-drag-preview {\r\n      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\r\n      transform: rotate(2deg);\r\n    }\r\n    \r\n    .widget-card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 0.75rem;\r\n    }\r\n    \r\n    .widget-category {\r\n      font-size: 0.75rem;\r\n      color: var(--surface-500);\r\n      background: var(--surface-100);\r\n      padding: 0.25rem 0.5rem;\r\n      border-radius: 4px;\r\n    }\r\n    \r\n    .widget-card-content {\r\n      margin-bottom: 1rem;\r\n    }\r\n    \r\n    .widget-preview {\r\n      height: 80px;\r\n      background: var(--surface-50);\r\n      border-radius: 4px;\r\n      margin: 0.5rem 0;\r\n      position: relative;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    .preview-chart {\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: end;\r\n      padding: 0.5rem;\r\n      gap: 0.25rem;\r\n    }\r\n    \r\n    .chart-line {\r\n      flex: 1;\r\n      background: linear-gradient(to top, var(--primary-color), transparent);\r\n      border-radius: 2px;\r\n      height: 60%;\r\n      animation: chartPulse 2s ease-in-out infinite;\r\n    }\r\n    \r\n    .chart-line:nth-child(2) {\r\n      height: 40%;\r\n      animation-delay: 0.5s;\r\n    }\r\n    \r\n    .chart-line:nth-child(3) {\r\n      height: 80%;\r\n      animation-delay: 1s;\r\n    }\r\n    \r\n    .preview-bars {\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: end;\r\n      padding: 0.5rem;\r\n      gap: 0.25rem;\r\n    }\r\n    \r\n    .bar {\r\n      flex: 1;\r\n      background: var(--primary-color);\r\n      border-radius: 2px;\r\n      animation: barGrow 1.5s ease-out;\r\n    }\r\n    \r\n    .preview-radar {\r\n      height: 100%;\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .radar-center {\r\n      width: 40px;\r\n      height: 40px;\r\n      border: 2px solid var(--primary-color);\r\n      border-radius: 50%;\r\n      position: relative;\r\n    }\r\n    \r\n    .radar-point {\r\n      position: absolute;\r\n      width: 6px;\r\n      height: 6px;\r\n      background: var(--primary-color);\r\n      border-radius: 50%;\r\n    }\r\n    \r\n    .preview-pie {\r\n      height: 100%;\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .pie-slice {\r\n      position: absolute;\r\n      width: 30px;\r\n      height: 30px;\r\n      border-radius: 50%;\r\n      background: conic-gradient(\r\n        var(--primary-color) 0deg var(--percentage),\r\n        var(--surface-200) var(--percentage) 360deg\r\n      );\r\n      transform: rotate(var(--rotation));\r\n    }\r\n    \r\n    .preview-progress {\r\n      height: 100%;\r\n      padding: 0.5rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .progress-item {\r\n      height: 8px;\r\n      background: var(--surface-200);\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    .progress-bar {\r\n      height: 100%;\r\n      background: var(--primary-color);\r\n      border-radius: 4px;\r\n      animation: progressFill 2s ease-out;\r\n    }\r\n    \r\n    .preview-heatmap {\r\n      height: 100%;\r\n      display: grid;\r\n      grid-template-columns: repeat(4, 1fr);\r\n      gap: 2px;\r\n      padding: 0.5rem;\r\n    }\r\n    \r\n    .heatmap-cell {\r\n      border-radius: 2px;\r\n    }\r\n    \r\n    .heatmap-cell.low { background: #22c55e; }\r\n    .heatmap-cell.medium { background: #eab308; }\r\n    .heatmap-cell.high { background: #f97316; }\r\n    .heatmap-cell.critical { background: #ef4444; }\r\n    \r\n    .widget-card-footer {\r\n      margin-top: auto;\r\n    }\r\n    \r\n    .empty-state {\r\n      text-align: center;\r\n      padding: 3rem 1rem;\r\n    }\r\n    \r\n    @keyframes chartPulse {\r\n      0%, 100% { opacity: 0.7; }\r\n      50% { opacity: 1; }\r\n    }\r\n    \r\n    @keyframes barGrow {\r\n      from { height: 0; }\r\n      to { height: var(--height); }\r\n    }\r\n    \r\n    @keyframes progressFill {\r\n      from { width: 0; }\r\n      to { width: var(--width); }\r\n    }\r\n  `]\r\n})\r\nexport class WidgetLibraryComponent implements OnInit, OnDestroy {\r\n  private dashboardService = inject(DashboardService);\r\n\r\n  widgets: WidgetLibraryItem[] = [];\r\n  filteredWidgets: WidgetLibraryItem[] = [];\r\n  searchQuery: string = '';\r\n  selectedCategory: string = '';\r\n  \r\n  categoryOptions = [\r\n    { label: 'All Categories', value: '' },\r\n    ...WIDGET_CATEGORIES.map(cat => ({ label: cat.label, value: cat.key }))\r\n  ];\r\n  \r\n  private subscriptions: Subscription[] = [];\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(\r\n      this.dashboardService.filteredWidgets$.subscribe(widgets => {\r\n        this.widgets = widgets;\r\n        this.applyFilters();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  onSearchChange() {\r\n    this.dashboardService.setSearchQuery(this.searchQuery);\r\n  }\r\n\r\n  onCategoryChange() {\r\n    this.applyFilters();\r\n  }\r\n\r\n  private applyFilters() {\r\n    let filtered = [...this.widgets];\r\n    \r\n    if (this.selectedCategory) {\r\n      filtered = filtered.filter(widget => widget.category === this.selectedCategory);\r\n    }\r\n    \r\n    this.filteredWidgets = filtered;\r\n  }\r\n\r\n  onWidgetClick(widget: WidgetLibraryItem) {\r\n    this.onAddWidget(widget);\r\n  }\r\n\r\n  onAddWidget(widget: WidgetLibraryItem, event?: Event) {\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n    \r\n    this.dashboardService.addWidget(widget.key);\r\n  }\r\n\r\n  onClose() {\r\n    this.dashboardService.setShowAddWidget(false);\r\n  }\r\n\r\n  getCategoryLabel(categoryKey: string): string {\r\n    const category = WIDGET_CATEGORIES.find(cat => cat.key === categoryKey);\r\n    return category ? category.label : categoryKey;\r\n  }\r\n\r\n  trackByWidgetKey(index: number, widget: WidgetLibraryItem): string {\r\n    return widget.key;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextarea } from 'primeng/inputtextarea';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { WidgetService } from '../../services/widget.service';\r\nimport { WidgetConfig, SeriesConfig, AppetiteBand } from '../../models/widget.config';\r\n\r\n@Component({\r\n  selector: 'app-configuration-panel',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabViewModule,\r\n    InputTextModule,\r\n    InputTextarea,\r\n    DropdownModule,\r\n    MultiSelectModule,\r\n    CheckboxModule,\r\n    SliderModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    DividerModule\r\n  ],\r\n  template: `\r\n    <div class=\"configuration-panel\" *ngIf=\"selectedWidget\">\r\n      <!-- Panel Header -->\r\n      <div class=\"panel-header\">\r\n        <h4 class=\"m-0\">Configure Widget</h4>\r\n        <button \r\n          pButton \r\n          type=\"button\" \r\n          icon=\"pi pi-times\" \r\n          class=\"close-btn p-button-text p-button-sm\"\r\n          (click)=\"onClose()\"\r\n          pTooltip=\"Close Configuration\">\r\n        </button>\r\n        <p class=\"text-sm text-surface-500 m-0 mt-1\">{{ selectedWidget.name }}</p>\r\n      </div>\r\n\r\n      <!-- Configuration Form -->\r\n      <div class=\"panel-content\">\r\n        <form [formGroup]=\"configForm\" (ngSubmit)=\"onSave()\">\r\n          <p-tabView>\r\n            <!-- Basic Settings -->\r\n            <p-tabPanel header=\"Basic\">\r\n              <div class=\"form-grid\">\r\n                <div class=\"field\">\r\n                  <label for=\"name\">Widget Name</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    id=\"name\"\r\n                    pInputText \r\n                    formControlName=\"name\"\r\n                    placeholder=\"Enter widget name\">\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                  <label for=\"description\">Description</label>\r\n                  <textarea \r\n                    id=\"description\"\r\n                    pInputTextarea \r\n                    formControlName=\"description\"\r\n                    placeholder=\"Enter widget description\"\r\n                    rows=\"3\">\r\n                  </textarea>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                  <label for=\"type\">Chart Type</label>\r\n                  <p-dropdown \r\n                    id=\"type\"\r\n                    [options]=\"chartTypeOptions\" \r\n                    formControlName=\"type\"\r\n                    placeholder=\"Select chart type\">\r\n                  </p-dropdown>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                  <label for=\"dataset\">Data Source</label>\r\n                  <p-dropdown \r\n                    id=\"dataset\"\r\n                    [options]=\"datasetOptions\" \r\n                    formControlName=\"dataset\"\r\n                    placeholder=\"Select dataset\">\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n            </p-tabPanel>\r\n\r\n            <!-- Data Configuration -->\r\n            <p-tabPanel header=\"Data\">\r\n              <div class=\"form-section\">\r\n                <h5>X-Axis Configuration</h5>\r\n                <div class=\"field\">\r\n                  <label for=\"xField\">X-Axis Field</label>\r\n                  <p-dropdown \r\n                    id=\"xField\"\r\n                    [options]=\"xFieldOptions\" \r\n                    formControlName=\"xField\"\r\n                    placeholder=\"Select X-axis field\">\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <p-divider></p-divider>\r\n\r\n              <div class=\"form-section\">\r\n                <div class=\"flex justify-content-between align-items-center mb-3\">\r\n                  <h5>Data Series</h5>\r\n                  <button \r\n                    pButton \r\n                    type=\"button\" \r\n                    label=\"Add Series\" \r\n                    icon=\"pi pi-plus\" \r\n                    class=\"p-button-outlined p-button-sm\"\r\n                    (click)=\"onAddSeries()\">\r\n                  </button>\r\n                </div>\r\n                \r\n                <div class=\"series-list\">\r\n                  <div \r\n                    *ngFor=\"let series of seriesList; let i = index; trackBy: trackBySeriesId\"\r\n                    class=\"series-item\">\r\n                    <div class=\"series-header\">\r\n                      <h6>Series {{ i + 1 }}</h6>\r\n                      <button \r\n                        pButton \r\n                        type=\"button\" \r\n                        icon=\"pi pi-trash\" \r\n                        class=\"p-button-text p-button-sm p-button-danger\"\r\n                        (click)=\"onRemoveSeries(series.id)\">\r\n                      </button>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-grid\">\r\n                      <div class=\"field\">\r\n                        <label>Label</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          pInputText \r\n                          [(ngModel)]=\"series.label\"\r\n                          (ngModelChange)=\"onSeriesChange(series.id, 'label', $event)\"\r\n                          placeholder=\"Series label\">\r\n                      </div>\r\n                      \r\n                      <div class=\"field\">\r\n                        <label>Field</label>\r\n                        <p-dropdown \r\n                          [options]=\"getFieldOptions()\" \r\n                          [(ngModel)]=\"series.field\"\r\n                          (ngModelChange)=\"onSeriesChange(series.id, 'field', $event)\"\r\n                          placeholder=\"Select field\">\r\n                        </p-dropdown>\r\n                      </div>\r\n                      \r\n                      <div class=\"field\">\r\n                        <label>Type</label>\r\n                        <p-dropdown \r\n                          [options]=\"seriesTypeOptions\" \r\n                          [(ngModel)]=\"series.type\"\r\n                          (ngModelChange)=\"onSeriesChange(series.id, 'type', $event)\"\r\n                          placeholder=\"Select type\">\r\n                        </p-dropdown>\r\n                      </div>\r\n                      \r\n                      <div class=\"field\">\r\n                        <label>Y-Axis</label>\r\n                        <p-dropdown \r\n                          [options]=\"yAxisOptions\" \r\n                          [(ngModel)]=\"series.yAxis\"\r\n                          (ngModelChange)=\"onSeriesChange(series.id, 'yAxis', $event)\"\r\n                          placeholder=\"Select Y-axis\">\r\n                        </p-dropdown>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </p-tabPanel>\r\n\r\n            <!-- Display Options -->\r\n            <p-tabPanel header=\"Display\">\r\n              <div class=\"form-section\">\r\n                <h5>Chart Options</h5>\r\n                <div class=\"form-grid\">\r\n                  <div class=\"field-checkbox\">\r\n                    <p-checkbox \r\n                      formControlName=\"showLegend\" \r\n                      inputId=\"showLegend\">\r\n                    </p-checkbox>\r\n                    <label for=\"showLegend\">Show Legend</label>\r\n                  </div>\r\n                  \r\n                  <div class=\"field-checkbox\">\r\n                    <p-checkbox \r\n                      formControlName=\"showGrid\" \r\n                      inputId=\"showGrid\">\r\n                    </p-checkbox>\r\n                    <label for=\"showGrid\">Show Grid</label>\r\n                  </div>\r\n                  \r\n                  <div class=\"field-checkbox\">\r\n                    <p-checkbox \r\n                      formControlName=\"showTooltip\" \r\n                      inputId=\"showTooltip\">\r\n                    </p-checkbox>\r\n                    <label for=\"showTooltip\">Show Tooltip</label>\r\n                  </div>\r\n                  \r\n                  <div class=\"field-checkbox\">\r\n                    <p-checkbox \r\n                      formControlName=\"stacked\" \r\n                      inputId=\"stacked\">\r\n                    </p-checkbox>\r\n                    <label for=\"stacked\">Stack Series</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <p-divider></p-divider>\r\n\r\n              <div class=\"form-section\">\r\n                <div class=\"flex justify-content-between align-items-center mb-3\">\r\n                  <h5>Appetite Bands</h5>\r\n                  <button \r\n                    pButton \r\n                    type=\"button\" \r\n                    label=\"Add Band\" \r\n                    icon=\"pi pi-plus\" \r\n                    class=\"p-button-outlined p-button-sm\"\r\n                    (click)=\"onAddBand()\">\r\n                  </button>\r\n                </div>\r\n                \r\n                <div class=\"bands-list\">\r\n                  <div \r\n                    *ngFor=\"let band of bandsList; let i = index; trackBy: trackByBandId\"\r\n                    class=\"band-item\">\r\n                    <div class=\"band-header\">\r\n                      <h6>Band {{ i + 1 }}</h6>\r\n                      <button \r\n                        pButton \r\n                        type=\"button\" \r\n                        icon=\"pi pi-trash\" \r\n                        class=\"p-button-text p-button-sm p-button-danger\"\r\n                        (click)=\"onRemoveBand(band.id)\">\r\n                      </button>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-grid\">\r\n                      <div class=\"field\">\r\n                        <label>Value</label>\r\n                        <input \r\n                          type=\"number\" \r\n                          pInputText \r\n                          [(ngModel)]=\"band.value\"\r\n                          (ngModelChange)=\"onBandChange(band.id, 'value', $event)\"\r\n                          placeholder=\"Band value\">\r\n                      </div>\r\n                      \r\n                      <div class=\"field\">\r\n                        <label>Label</label>\r\n                        <input \r\n                          type=\"text\" \r\n                          pInputText \r\n                          [(ngModel)]=\"band.label\"\r\n                          (ngModelChange)=\"onBandChange(band.id, 'label', $event)\"\r\n                          placeholder=\"Band label\">\r\n                      </div>\r\n                      \r\n                      <div class=\"field-checkbox\">\r\n                        <p-checkbox \r\n                          [(ngModel)]=\"band.dashed\"\r\n                          (ngModelChange)=\"onBandChange(band.id, 'dashed', $event)\"\r\n                          inputId=\"dashed{{ i }}\">\r\n                        </p-checkbox>\r\n                        <label for=\"dashed{{ i }}\">Dashed Line</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </p-tabPanel>\r\n\r\n            <!-- Security & Refresh -->\r\n            <p-tabPanel header=\"Security\">\r\n              <div class=\"form-section\">\r\n                <h5>Access Control</h5>\r\n                <div class=\"field\">\r\n                  <label for=\"roles\">Allowed Roles</label>\r\n                  <p-multiSelect \r\n                    id=\"roles\"\r\n                    [options]=\"roleOptions\" \r\n                    formControlName=\"roles\"\r\n                    placeholder=\"Select roles\">\r\n                  </p-multiSelect>\r\n                </div>\r\n              </div>\r\n\r\n              <p-divider></p-divider>\r\n\r\n              <div class=\"form-section\">\r\n                <h5>Refresh Settings</h5>\r\n                <div class=\"field\">\r\n                  <label for=\"refresh\">Refresh Frequency</label>\r\n                  <p-dropdown \r\n                    id=\"refresh\"\r\n                    [options]=\"refreshOptions\" \r\n                    formControlName=\"refresh\"\r\n                    placeholder=\"Select refresh frequency\">\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n            </p-tabPanel>\r\n          </p-tabView>\r\n\r\n          <!-- Form Actions -->\r\n          <div class=\"form-actions\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Cancel\" \r\n              class=\"p-button-outlined\"\r\n              (click)=\"onCancel()\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"submit\" \r\n              label=\"Save Changes\" \r\n              class=\"p-button\"\r\n              [disabled]=\"!configForm.valid\">\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .configuration-panel {\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      background: var(--surface-0);\r\n      border-left: 1px solid var(--surface-200);\r\n    }\r\n    \r\n    .panel-header {\r\n      position: relative;\r\n      padding: 1rem;\r\n      border-bottom: 1px solid var(--surface-200);\r\n      background: var(--surface-50);\r\n    }\r\n    \r\n    .panel-header h4 {\r\n      margin: 0;\r\n    }\r\n\r\n    .close-btn {\r\n      position: absolute;\r\n      top: 0.75rem;\r\n      right: 0.75rem;\r\n    }\r\n    \r\n    .panel-content {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .form-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n      gap: 1rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n    \r\n    .form-section {\r\n      margin-bottom: 2rem;\r\n    }\r\n    \r\n    .field {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .field-checkbox {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .field label {\r\n      font-weight: 500;\r\n      color: var(--text-color);\r\n    }\r\n    \r\n    .series-list, .bands-list {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n    }\r\n    \r\n    .series-item, .band-item {\r\n      border: 1px solid var(--surface-200);\r\n      border-radius: 8px;\r\n      padding: 1rem;\r\n      background: var(--surface-50);\r\n    }\r\n    \r\n    .series-header, .band-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 1rem;\r\n    }\r\n    \r\n    .series-header h6, .band-header h6 {\r\n      margin: 0;\r\n      color: var(--text-color);\r\n    }\r\n    \r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;\r\n      padding: 1rem;\r\n      border-top: 1px solid var(--surface-200);\r\n      background: var(--surface-50);\r\n    }\r\n  `]\r\n})\r\nexport class ConfigurationPanelComponent implements OnInit, OnDestroy {\r\n  private dashboardService = inject(DashboardService);\r\n  private widgetService = inject(WidgetService);\r\n  private fb = inject(FormBuilder);\r\n\r\n  selectedWidget: WidgetConfig | null = null;\r\n  configForm!: FormGroup;\r\n  seriesList: SeriesConfig[] = [];\r\n  bandsList: AppetiteBand[] = [];\r\n  \r\n  // Options for dropdowns\r\n  chartTypeOptions = [\r\n    { label: 'Line Chart', value: 'line' },\r\n    { label: 'Area Chart', value: 'area' },\r\n    { label: 'Bar Chart', value: 'bar' },\r\n    { label: 'Pie Chart', value: 'pie' },\r\n    { label: 'Radar Chart', value: 'radar' },\r\n    { label: 'Heatmap', value: 'heatmap' },\r\n    { label: 'Progress Bars', value: 'progress' }\r\n  ];\r\n  \r\n  datasetOptions = [\r\n    { label: 'Incident Trend', value: 'incident-trend' },\r\n    { label: 'KRI Breaches', value: 'kri-breaches' },\r\n    { label: 'Control Effectiveness', value: 'control-effectiveness' },\r\n    { label: 'Loss Events', value: 'loss-events' },\r\n    { label: 'Audit Aging', value: 'audit-aging' },\r\n    { label: 'Appetite Utilization', value: 'appetite-utilization' },\r\n    { label: 'Risk Heatmap', value: 'risk-heatmap' }\r\n  ];\r\n  \r\n  xFieldOptions: any[] = [];\r\n  seriesTypeOptions = [\r\n    { label: 'Line', value: 'line' },\r\n    { label: 'Area', value: 'area' },\r\n    { label: 'Bar', value: 'bar' }\r\n  ];\r\n  \r\n  yAxisOptions = [\r\n    { label: 'Left Axis', value: 'left' },\r\n    { label: 'Right Axis', value: 'right' }\r\n  ];\r\n  \r\n  roleOptions = [\r\n    { label: 'Risk Manager', value: 'Risk Manager' },\r\n    { label: 'Executive', value: 'Executive' },\r\n    { label: 'Compliance Officer', value: 'Compliance Officer' },\r\n    { label: 'Auditor', value: 'Auditor' },\r\n    { label: 'Analyst', value: 'Analyst' }\r\n  ];\r\n  \r\n  refreshOptions = [\r\n    { label: 'Real-time', value: 'realtime' },\r\n    { label: 'Daily', value: 'daily' },\r\n    { label: 'Monthly', value: 'monthly' }\r\n  ];\r\n  \r\n  private subscriptions: Subscription[] = [];\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    \r\n    this.subscriptions.push(\r\n      this.widgetService.selectedWidget$.subscribe(widget => {\r\n        this.selectedWidget = widget;\r\n        if (widget) {\r\n          this.loadWidgetConfiguration(widget);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  private initializeForm() {\r\n    this.configForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      type: ['line', Validators.required],\r\n      dataset: ['incident-trend', Validators.required],\r\n      xField: ['', Validators.required],\r\n      showLegend: [true],\r\n      showGrid: [true],\r\n      showTooltip: [true],\r\n      stacked: [false],\r\n      roles: [[]],\r\n      refresh: ['monthly']\r\n    });\r\n  }\r\n\r\n  private loadWidgetConfiguration(widget: WidgetConfig) {\r\n    this.configForm.patchValue({\r\n      name: widget.name,\r\n      description: widget.description,\r\n      type: widget.type,\r\n      dataset: widget.dataset,\r\n      xField: widget.xField,\r\n      showLegend: widget.showLegend,\r\n      showGrid: widget.showGrid,\r\n      showTooltip: widget.showTooltip,\r\n      stacked: widget.stacked,\r\n      roles: widget.roles,\r\n      refresh: widget.refresh\r\n    });\r\n\r\n    this.seriesList = [...widget.series];\r\n    this.bandsList = [...widget.appetiteBands];\r\n    this.updateFieldOptions();\r\n  }\r\n\r\n  private updateFieldOptions() {\r\n    const dataset = this.configForm.get('dataset')?.value;\r\n    if (dataset) {\r\n      this.xFieldOptions = this.widgetService.getAvailableFields(dataset).map(field => ({\r\n        label: field,\r\n        value: field\r\n      }));\r\n    }\r\n  }\r\n\r\n  onAddSeries() {\r\n    const newSeries: SeriesConfig = {\r\n      id: this.generateId(),\r\n      label: `Series ${this.seriesList.length + 1}`,\r\n      field: 'value',\r\n      type: 'line',\r\n      yAxis: 'left'\r\n    };\r\n    \r\n    this.seriesList.push(newSeries);\r\n    this.updateWidgetSeries();\r\n  }\r\n\r\n  onRemoveSeries(seriesId: string) {\r\n    this.seriesList = this.seriesList.filter(s => s.id !== seriesId);\r\n    this.updateWidgetSeries();\r\n  }\r\n\r\n  onSeriesChange(seriesId: string, field: string, value: any) {\r\n    const series = this.seriesList.find(s => s.id === seriesId);\r\n    if (series) {\r\n      (series as any)[field] = value;\r\n      this.updateWidgetSeries();\r\n    }\r\n  }\r\n\r\n  onAddBand() {\r\n    const newBand: AppetiteBand = {\r\n      id: this.generateId(),\r\n      value: 50,\r\n      label: `Band ${this.bandsList.length + 1}`,\r\n      dashed: false\r\n    };\r\n    \r\n    this.bandsList.push(newBand);\r\n    this.updateWidgetBands();\r\n  }\r\n\r\n  onRemoveBand(bandId: string) {\r\n    this.bandsList = this.bandsList.filter(b => b.id !== bandId);\r\n    this.updateWidgetBands();\r\n  }\r\n\r\n  onBandChange(bandId: string, field: string, value: any) {\r\n    const band = this.bandsList.find(b => b.id === bandId);\r\n    if (band) {\r\n      (band as any)[field] = value;\r\n      this.updateWidgetBands();\r\n    }\r\n  }\r\n\r\n  private updateWidgetSeries() {\r\n    if (this.selectedWidget) {\r\n      this.dashboardService.updateWidget(this.selectedWidget.id, { series: this.seriesList });\r\n    }\r\n  }\r\n\r\n  private updateWidgetBands() {\r\n    if (this.selectedWidget) {\r\n      this.dashboardService.updateWidget(this.selectedWidget.id, { appetiteBands: this.bandsList });\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    if (this.configForm.valid && this.selectedWidget) {\r\n      const formValue = this.configForm.value;\r\n      \r\n      this.dashboardService.updateWidget(this.selectedWidget.id, {\r\n        name: formValue.name,\r\n        description: formValue.description,\r\n        type: formValue.type,\r\n        dataset: formValue.dataset,\r\n        xField: formValue.xField,\r\n        showLegend: formValue.showLegend,\r\n        showGrid: formValue.showGrid,\r\n        showTooltip: formValue.showTooltip,\r\n        stacked: formValue.stacked,\r\n        roles: formValue.roles,\r\n        refresh: formValue.refresh\r\n      });\r\n      \r\n      this.onClose();\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.onClose();\r\n  }\r\n\r\n  onClose() {\r\n    this.widgetService.stopConfiguration();\r\n  }\r\n\r\n  getFieldOptions() {\r\n    const dataset = this.configForm.get('dataset')?.value;\r\n    if (dataset) {\r\n      return this.widgetService.getAvailableFields(dataset).map(field => ({\r\n        label: field,\r\n        value: field\r\n      }));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  trackBySeriesId(index: number, series: SeriesConfig): string {\r\n    return series.id;\r\n  }\r\n\r\n  trackByBandId(index: number, band: AppetiteBand): string {\r\n    return band.id;\r\n  }\r\n\r\n  private generateId(): string {\r\n    return `id_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { GlobalFilters } from '../../models/dashboard.layout';\r\n\r\n@Component({\r\n  selector: 'app-global-filters',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CalendarModule,\r\n    DropdownModule,\r\n    CheckboxModule,\r\n    SliderModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    DividerModule\r\n  ],\r\n  template: `\r\n    <div class=\"global-filters\">\r\n      <p-card>\r\n        <ng-template pTemplate=\"header\">\r\n        <div class=\"filter-header\">\r\n        <!--\r\n          <div class=\"flex items-center gap-2\">\r\n            <i class=\"pi pi-filter text-primary\"></i>\r\n            <h5 class=\"m-0\">Global Filters</h5>\r\n          </div>\r\n        -->\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            icon=\"pi pi-times\" \r\n            class=\"close-btn p-button-text p-button-sm\"\r\n            (click)=\"onClose()\"\r\n            pTooltip=\"Close Filters\">\r\n          </button>\r\n        </div>\r\n      </ng-template>\r\n\r\n        \r\n        <div class=\"p-3\">\r\n          <!-- Date Range -->\r\n          <div class=\"filter-section\">\r\n            <h6 class=\"mb-3\">Date Range</h6>\r\n            <div class=\"grid grid-cols-2 gap-2 mb-3\">\r\n              <button \r\n                *ngFor=\"let period of dateRangeOptions\"\r\n                pButton \r\n                type=\"button\" \r\n                [label]=\"period.label\"\r\n                [class]=\"filters.dateRange === period.value ? 'p-button' : 'p-button-outlined'\"\r\n                (click)=\"onDateRangeChange(period.value)\"\r\n                class=\"p-button-sm\">\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"flex align-items-center gap-2 text-sm text-surface-500\" *ngIf=\"filters.dateRange === 'custom'\">\r\n              <i class=\"pi pi-calendar\"></i>\r\n              <span>Custom Range</span>\r\n            </div>\r\n            \r\n            <div class=\"custom-date-range\" *ngIf=\"filters.dateRange === 'custom'\">\r\n              <div class=\"field\">\r\n                <label>Start Date</label>\r\n                <p-calendar \r\n                  [(ngModel)]=\"customStartDate\"\r\n                  (ngModelChange)=\"onCustomDateChange()\"\r\n                  placeholder=\"Select start date\"\r\n                  [showIcon]=\"true\">\r\n                </p-calendar>\r\n              </div>\r\n              <div class=\"field\">\r\n                <label>End Date</label>\r\n                <p-calendar \r\n                  [(ngModel)]=\"customEndDate\"\r\n                  (ngModelChange)=\"onCustomDateChange()\"\r\n                  placeholder=\"Select end date\"\r\n                  [showIcon]=\"true\">\r\n                </p-calendar>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <p-divider></p-divider>\r\n\r\n          <!-- Business Unit -->\r\n          <div class=\"filter-section\">\r\n            <h6 class=\"mb-3\">Business Unit</h6>\r\n            <div class=\"field\">\r\n              <p-dropdown \r\n                [options]=\"businessUnitOptions\" \r\n                [(ngModel)]=\"filters.businessUnit\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                placeholder=\"Select business unit\">\r\n              </p-dropdown>\r\n            </div>\r\n          </div>\r\n\r\n          <p-divider></p-divider>\r\n\r\n          <!-- Risk Category -->\r\n          <div class=\"filter-section\">\r\n            <h6 class=\"mb-3\">Risk Category</h6>\r\n            <div class=\"field\">\r\n              <p-dropdown \r\n                [options]=\"riskCategoryOptions\" \r\n                [(ngModel)]=\"filters.riskCategory\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                placeholder=\"Select risk category\">\r\n              </p-dropdown>\r\n            </div>\r\n          </div>\r\n\r\n          <p-divider></p-divider>\r\n\r\n          <!-- Severity Filter -->\r\n          <div class=\"filter-section\">\r\n            <h6 class=\"mb-3\">Minimum Severity</h6>\r\n            <div class=\"field\">\r\n              <label>Severity ≥ {{ filters.severity }}</label>\r\n              <p-slider \r\n                [(ngModel)]=\"filters.severity\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                [min]=\"1\" \r\n                [max]=\"5\" \r\n                [step]=\"1\"\r\n>\r\n              </p-slider>\r\n            </div>\r\n          </div>\r\n\r\n          <p-divider></p-divider>\r\n\r\n          <!-- Auto Refresh -->\r\n          <div class=\"filter-section\">\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n              <div>\r\n                <h6 class=\"m-0\">Auto Refresh</h6>\r\n                <p class=\"text-sm text-surface-500 m-0\">Refresh data automatically</p>\r\n              </div>\r\n              <p-checkbox \r\n                [(ngModel)]=\"filters.autoRefresh\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                inputId=\"autoRefresh\">\r\n              </p-checkbox>\r\n            </div>\r\n            \r\n            <div class=\"field mt-3\" *ngIf=\"filters.autoRefresh\">\r\n              <label>Refresh Interval (minutes)</label>\r\n              <p-slider \r\n                [(ngModel)]=\"filters.refreshInterval\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                [min]=\"5\" \r\n                [max]=\"120\" \r\n                [step]=\"5\"\r\n>\r\n              </p-slider>\r\n            </div>\r\n          </div>\r\n\r\n          <p-divider></p-divider>\r\n\r\n          <!-- Filter Actions -->\r\n          <div class=\"filter-actions\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Reset Filters\" \r\n              icon=\"pi pi-refresh\" \r\n              class=\"p-button-outlined p-button-sm w-full mb-2\"\r\n              (click)=\"onResetFilters()\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Apply Filters\" \r\n              icon=\"pi pi-check\" \r\n              class=\"p-button p-button-sm w-full\"\r\n              (click)=\"onApplyFilters()\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </p-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .global-filters {\r\n      height: 100%;\r\n      overflow-y: auto;\r\n    }\r\n    \r\n    .filter-section {\r\n      margin-bottom: 1.5rem;\r\n    }\r\n    \r\n    .filter-section h6 {\r\n      color: var(--text-color);\r\n      font-weight: 600;\r\n    }\r\n    \r\n    .field {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .field label {\r\n      font-weight: 500;\r\n      color: var(--text-color);\r\n      font-size: 0.875rem;\r\n    }\r\n    \r\n    .custom-date-range {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 1rem;\r\n      margin-top: 1rem;\r\n    }\r\n    \r\n    .filter-actions {\r\n      margin-top: 1rem;\r\n    }\r\n    \r\n    .grid {\r\n      display: grid;\r\n    }\r\n    \r\n    .grid-cols-2 {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n    \r\n    .gap-2 {\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .mb-3 {\r\n      margin-bottom: 0.75rem;\r\n    }\r\n    \r\n    .mt-3 {\r\n      margin-top: 0.75rem;\r\n    }\r\n    \r\n    .w-full {\r\n      width: 100%;\r\n    }\r\n\r\n    .filter-header {\r\n      position: relative;\r\n      padding: 0.75rem 1rem;\r\n    }\r\n\r\n    .close-btn {\r\n      position: absolute;\r\n      top: 0.5rem;\r\n      right: 0.5rem;\r\n    }\r\n\r\n  `]\r\n})\r\nexport class GlobalFiltersComponent implements OnInit, OnDestroy {\r\n  private dashboardService = inject(DashboardService);\r\n\r\n  filters: GlobalFilters = {\r\n    dateRange: 'MTD',\r\n    businessUnit: 'All',\r\n    riskCategory: 'All',\r\n    severity: 1,\r\n    autoRefresh: true,\r\n    refreshInterval: 60\r\n  };\r\n\r\n  customStartDate: Date | null = null;\r\n  customEndDate: Date | null = null;\r\n\r\n  dateRangeOptions = [\r\n    { label: 'MTD', value: 'MTD' },\r\n    { label: 'QTD', value: 'QTD' },\r\n    { label: 'YTD', value: 'YTD' },\r\n    { label: '12M', value: '12M' },\r\n    { label: 'Custom', value: 'custom' }\r\n  ];\r\n\r\n  businessUnitOptions = [\r\n    { label: 'All', value: 'All' },\r\n    { label: 'Retail Banking', value: 'Retail Banking' },\r\n    { label: 'Corporate Banking', value: 'Corporate Banking' },\r\n    { label: 'Treasury', value: 'Treasury' },\r\n    { label: 'Operations', value: 'Operations' },\r\n    { label: 'IT & InfoSec', value: 'IT & InfoSec' }\r\n  ];\r\n\r\n  riskCategoryOptions = [\r\n    { label: 'All', value: 'All' },\r\n    { label: 'Basel L2', value: 'Basel L2' },\r\n    { label: 'Cyber', value: 'Cyber' },\r\n    { label: 'Compliance', value: 'Compliance' },\r\n    { label: 'Operational', value: 'Operational' }\r\n  ];\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(\r\n      this.dashboardService.filters$.subscribe(filters => {\r\n        this.filters = { ...filters };\r\n        this.updateCustomDates();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  onDateRangeChange(value: string) {\r\n    this.filters.dateRange = value as any;\r\n    this.onFilterChange();\r\n  }\r\n\r\n  onCustomDateChange() {\r\n    if (this.customStartDate && this.customEndDate) {\r\n      this.filters.customStartDate = this.customStartDate;\r\n      this.filters.customEndDate = this.customEndDate;\r\n      this.onFilterChange();\r\n    }\r\n  }\r\n\r\n  onFilterChange() {\r\n    this.dashboardService.updateFilters(this.filters);\r\n  }\r\n\r\n  onResetFilters() {\r\n    this.filters = {\r\n      dateRange: 'MTD',\r\n      businessUnit: 'All',\r\n      riskCategory: 'All',\r\n      severity: 1,\r\n      autoRefresh: true,\r\n      refreshInterval: 60\r\n    };\r\n    this.customStartDate = null;\r\n    this.customEndDate = null;\r\n    this.onFilterChange();\r\n  }\r\n\r\n  onApplyFilters() {\r\n    this.dashboardService.updateFilters(this.filters);\r\n    this.onClose();\r\n  }\r\n\r\n  onClose() {\r\n    this.dashboardService.setLeftPanelOpen(false);\r\n  }\r\n\r\n  private updateCustomDates() {\r\n    if (this.filters.customStartDate) {\r\n      this.customStartDate = this.filters.customStartDate;\r\n    }\r\n    if (this.filters.customEndDate) {\r\n      this.customEndDate = this.filters.customEndDate;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { CardModule } from 'primeng/card';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { WidgetService } from '../../services/widget.service';\r\nimport { DashboardCanvasComponent } from '../dashboard-canvas/dashboard-canvas.component';\r\nimport { WidgetLibraryComponent } from '../widget-library/widget-library.component';\r\nimport { ConfigurationPanelComponent } from '../configuration-panel/configuration-panel.component';\r\nimport { GlobalFiltersComponent } from '../global-filters/global-filters.component';\r\nimport { PREBUILT_TEMPLATES } from '../../templates/prebuilt-templates';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-builder',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    DropdownModule,\r\n    DialogModule,\r\n    TabViewModule,\r\n    CardModule,\r\n    DividerModule,\r\n    TooltipModule,\r\n    DashboardCanvasComponent,\r\n    WidgetLibraryComponent,\r\n    ConfigurationPanelComponent,\r\n    GlobalFiltersComponent\r\n  ],\r\n  template: `\r\n    <div class=\"dashboard-builder\">\r\n      <!-- Top Navigation -->\r\n      <div class=\"top-nav\">\r\n        <div class=\"nav-content\">\r\n          <div class=\"nav-left\">\r\n            <div class=\"flex align-items-center gap-3\">\r\n              <i class=\"pi pi-chart-line text-primary text-xl\"></i>\r\n              <h2 class=\"m-0\">GRC – Unified Dashboard</h2>\r\n            </div>\r\n            \r\n            <!-- Search -->\r\n            <div class=\"search-container\">\r\n              <input \r\n                type=\"text\" \r\n                pInputText \r\n                placeholder=\"Search templates, widgets, metrics…\" \r\n                [(ngModel)]=\"searchQuery\"\r\n                (ngModelChange)=\"onSearchChange()\"\r\n                class=\"search-input\">\r\n              <i class=\"pi pi-search search-icon\"></i>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"nav-right\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Share\" \r\n              icon=\"pi pi-share-alt\" \r\n              class=\"p-button-outlined\"\r\n              (click)=\"onShare()\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Export\" \r\n              icon=\"pi pi-download\" \r\n              class=\"p-button-outlined\"\r\n              (click)=\"onExport()\">\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              label=\"Save as Template\" \r\n              icon=\"pi pi-save\" \r\n              class=\"p-button\"\r\n              (click)=\"onSaveTemplate()\">\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Mode Tabs -->\r\n        <div class=\"mode-tabs\">\r\n          <div class=\"tab-buttons\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              [class]=\"mode === 'prebuilt' ? 'p-button' : 'p-button-outlined'\"\r\n              (click)=\"onModeChange('prebuilt')\"\r\n              class=\"tab-button\">\r\n              <i class=\"pi pi-th-large mr-2\"></i>\r\n              Pre-built Dashboards\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              [class]=\"mode === 'builder' ? 'p-button' : 'p-button-outlined'\"\r\n              (click)=\"onModeChange('builder')\"\r\n              class=\"tab-button\">\r\n              <i class=\"pi pi-cog mr-2\"></i>\r\n              Dashboard Builder\r\n            </button>\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              [class]=\"mode === 'library' ? 'p-button' : 'p-button-outlined'\"\r\n              (click)=\"onModeChange('library')\"\r\n              class=\"tab-button\">\r\n              <i class=\"pi pi-list mr-2\"></i>\r\n              Widget Library\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Main Content -->\r\n      <div class=\"main-content\">\r\n        <!-- Left Sidebar -->\r\n        <div class=\"left-sidebar\" *ngIf=\"leftPanelOpen\">\r\n          <div class=\"filters-header\">\r\n            <button \r\n              pButton \r\n              type=\"button\" \r\n              icon=\"pi pi-times\" \r\n              class=\"p-button-text p-button-sm\"\r\n              (click)=\"onToggleFilters()\"\r\n              pTooltip=\"Close Filters\">\r\n            </button>\r\n            <span class=\"filters-title\">Global Filters</span>\r\n          </div>\r\n          <app-global-filters></app-global-filters>\r\n        </div>\r\n\r\n        <div class=\"filters-header1\">\r\n          <button \r\n            *ngIf=\"!leftPanelOpen\" \r\n            class=\"p-button-text p-button-sm\" \r\n            pButton \r\n            icon=\"pi pi-filter\" \r\n            pTooltip=\"Open Filters\"\r\n            (click)=\"onToggleFilters()\">\r\n          </button>\r\n          <span *ngIf=\"!leftPanelOpen\" class=\"filters-title\">Global Filters</span>\r\n        </div>\r\n\r\n        <!-- Center Content -->\r\n        <div class=\"center-content\" [ngClass]=\"getCenterContentClasses()\">\r\n          <!-- Pre-built Templates -->\r\n          <div *ngIf=\"mode === 'prebuilt'\" class=\"templates-view\">\r\n            <div class=\"templates-grid\">\r\n              <div \r\n                *ngFor=\"let template of filteredTemplates; trackBy: trackByTemplateId\"\r\n                class=\"template-card\"\r\n                (click)=\"onApplyTemplate(template)\">\r\n                <div class=\"template-header\">\r\n                  <h5 class=\"m-0\">{{ template.name }}</h5>\r\n                  <div class=\"template-category\">{{ template.category | titlecase }}</div>\r\n                </div>\r\n                <div class=\"template-content\">\r\n                  <p class=\"text-sm text-surface-600 mb-3\">{{ template.description }}</p>\r\n                  <div class=\"template-tags\">\r\n                    <span \r\n                      *ngFor=\"let tag of template.tags\" \r\n                      class=\"template-tag\">\r\n                      {{ tag }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"template-footer\">\r\n                  <button \r\n                    pButton \r\n                    type=\"button\" \r\n                    label=\"Use Template\" \r\n                    icon=\"pi pi-plus\" \r\n                    class=\"p-button p-button-sm w-full\"\r\n                    (click)=\"onApplyTemplate(template, $event)\">\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Dashboard Builder -->\r\n          <div *ngIf=\"mode === 'builder'\" class=\"builder-view\">\r\n            <app-dashboard-canvas></app-dashboard-canvas>\r\n          </div>\r\n\r\n          <!-- Widget Library -->\r\n          <div *ngIf=\"mode === 'library'\" class=\"library-view\">\r\n            <app-widget-library></app-widget-library>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Right Sidebar -->\r\n        <div class=\"right-sidebar\" *ngIf=\"isConfiguring\">\r\n          <app-configuration-panel></app-configuration-panel>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Add Widget Dialog -->\r\n      <p-dialog \r\n        header=\"Add Widget\" \r\n        [(visible)]=\"showAddWidget\" \r\n        [modal]=\"true\" \r\n        [style]=\"{ width: '800px' }\"\r\n        [closable]=\"true\">\r\n        <app-widget-library></app-widget-library>\r\n      </p-dialog>\r\n\r\n      <!-- Save Template Dialog -->\r\n      <p-dialog \r\n        header=\"Save as Template\" \r\n        [(visible)]=\"showSaveTemplate\" \r\n        [modal]=\"true\" \r\n        [style]=\"{ width: '500px' }\"\r\n        [closable]=\"true\">\r\n        <div class=\"save-template-form\">\r\n          <div class=\"field\">\r\n            <label for=\"templateName\">Template Name</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"templateName\"\r\n              pInputText \r\n              [(ngModel)]=\"templateName\"\r\n              placeholder=\"Enter template name\">\r\n          </div>\r\n          <div class=\"field\">\r\n            <label for=\"templateDescription\">Description</label>\r\n            <textarea \r\n              id=\"templateDescription\"\r\n              pInputText \r\n              [(ngModel)]=\"templateDescription\"\r\n              placeholder=\"Enter template description\"\r\n              rows=\"3\">\r\n            </textarea>\r\n          </div>\r\n          <div class=\"field\">\r\n            <label for=\"templateTags\">Tags</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"templateTags\"\r\n              pInputText \r\n              [(ngModel)]=\"templateTags\"\r\n              placeholder=\"Enter tags (comma separated)\">\r\n          </div>\r\n        </div>\r\n        <ng-template pTemplate=\"footer\">\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            label=\"Cancel\" \r\n            class=\"p-button-outlined\"\r\n            (click)=\"onCancelSaveTemplate()\">\r\n          </button>\r\n          <button \r\n            pButton \r\n            type=\"button\" \r\n            label=\"Save Template\" \r\n            class=\"p-button\"\r\n            (click)=\"onConfirmSaveTemplate()\">\r\n          </button>\r\n        </ng-template>\r\n      </p-dialog>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .dashboard-builder {\r\n      display: flex;\r\n      flex-direction: column;\r\n      background: var(--surface-50);\r\n    }\r\n    \r\n    .top-nav {\r\n      background: var(--surface-0);\r\n      border-bottom: 1px solid var(--surface-200);\r\n      z-index: 10;\r\n    }\r\n    \r\n    .nav-content {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 1rem 2rem;\r\n    }\r\n    \r\n    .nav-left {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 2rem;\r\n    }\r\n    \r\n    .search-container {\r\n      position: relative;\r\n      width: 400px;\r\n    }\r\n    \r\n    .search-input {\r\n      width: 100%;\r\n      padding-right: 2.5rem;\r\n    }\r\n    \r\n    .search-icon {\r\n      position: absolute;\r\n      right: 0.75rem;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      color: var(--surface-500);\r\n    }\r\n    \r\n    .nav-right {\r\n      display: flex;\r\n      gap: 0.75rem;\r\n    }\r\n    \r\n    .mode-tabs {\r\n      padding: 0 2rem 1rem;\r\n    }\r\n    \r\n    .tab-buttons {\r\n      display: flex;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .tab-button {\r\n      flex: 1;\r\n      max-width: 200px;\r\n    }\r\n    \r\n    .main-content {\r\n      flex: 1;\r\n      display: flex;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    .left-sidebar {\r\n      width: 300px;\r\n      background: var(--surface-0);\r\n      border-right: 1px solid var(--surface-200);\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .filters-header {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      padding-bottom: 1rem;\r\n      padding-left: 1.3rem;\r\n      border-bottom: 1px solid var(--surface-200);\r\n      background: var(--surface-50);\r\n    }\r\n\r\n    .filters-header1 {\r\n      position: absolute;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      padding-bottom: 1rem;\r\n      padding-left: 1.3rem;\r\n      border-bottom: 1px solid var(--surface-200);\r\n      background: var(--surface-50);\r\n    }\r\n\r\n    .filters-title {\r\n      font-weight: 600;\r\n      font-size: 0.95rem;\r\n    }\r\n    \r\n    .center-content {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      padding: 2rem;\r\n    }\r\n    \r\n    .center-content.with-left-sidebar {\r\n      margin-left: 0;\r\n    }\r\n    \r\n    .center-content.with-right-sidebar {\r\n      margin-right: 0;\r\n    }\r\n    \r\n    .right-sidebar {\r\n      width: 400px;\r\n      background: var(--surface-0);\r\n      border-left: 1px solid var(--surface-200);\r\n      overflow-y: auto;\r\n    }\r\n    \r\n    .templates-view {\r\n      height: 100%;\r\n    }\r\n    \r\n    .templates-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n      gap: 1.5rem;\r\n    }\r\n    \r\n    .template-card {\r\n      background: var(--surface-0);\r\n      border: 1px solid var(--surface-200);\r\n      border-radius: 12px;\r\n      padding: 1.5rem;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n    \r\n    .template-card:hover {\r\n      border-color: var(--primary-color);\r\n      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\r\n      transform: translateY(-2px);\r\n    }\r\n    \r\n    .template-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 1rem;\r\n    }\r\n    \r\n    .template-category {\r\n      font-size: 0.75rem;\r\n      color: var(--surface-500);\r\n      background: var(--surface-100);\r\n      padding: 0.25rem 0.5rem;\r\n      border-radius: 4px;\r\n    }\r\n    \r\n    .template-tags {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 0.5rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n    \r\n    .template-tag {\r\n      font-size: 0.75rem;\r\n      color: var(--primary-color);\r\n      background: rgba(var(--primary-color-rgb), 0.1);\r\n      padding: 0.25rem 0.5rem;\r\n      border-radius: 4px;\r\n    }\r\n    \r\n    .template-footer {\r\n      margin-top: auto;\r\n    }\r\n    \r\n    .builder-view, .library-view {\r\n      height: 100%;\r\n    }\r\n    \r\n    .save-template-form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n    }\r\n    \r\n    .field {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n    }\r\n    \r\n    .field label {\r\n      font-weight: 500;\r\n      color: var(--text-color);\r\n    }\r\n    \r\n    .w-full {\r\n      width: 100%;\r\n    }\r\n    \r\n    .mr-2 {\r\n      margin-right: 0.5rem;\r\n    }\r\n    \r\n    .mb-3 {\r\n      margin-bottom: 0.75rem;\r\n    }\r\n  `]\r\n})\r\nexport class DashboardBuilderComponent implements OnInit, OnDestroy {\r\n  private dashboardService = inject(DashboardService);\r\n  private widgetService = inject(WidgetService);\r\n\r\n  // State\r\n  mode: 'prebuilt' | 'builder' | 'library' = 'prebuilt';\r\n  leftPanelOpen: boolean = true;\r\n  isConfiguring: boolean = false;\r\n  showAddWidget: boolean = false;\r\n  showSaveTemplate: boolean = false;\r\n  searchQuery: string = '';\r\n  \r\n  // Template data\r\n  filteredTemplates = PREBUILT_TEMPLATES;\r\n  templateName: string = '';\r\n  templateDescription: string = '';\r\n  templateTags: string = '';\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(\r\n      this.dashboardService.mode$.subscribe(mode => {\r\n        this.mode = mode;\r\n      }),\r\n      this.dashboardService.leftPanelOpen$.subscribe(open => {\r\n        this.leftPanelOpen = open;\r\n      }),\r\n      this.dashboardService.showAddWidget$.subscribe(show => {\r\n        this.showAddWidget = show;\r\n      }),\r\n      this.dashboardService.filteredTemplates$.subscribe(templates => {\r\n        this.filteredTemplates = templates;\r\n      }),\r\n      this.widgetService.isConfiguring$.subscribe(configuring => {\r\n        this.isConfiguring = configuring;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  onModeChange(mode: 'prebuilt' | 'builder' | 'library') {\r\n    this.dashboardService.setMode(mode);\r\n  }\r\n\r\n  onSearchChange() {\r\n    this.dashboardService.setSearchQuery(this.searchQuery);\r\n  }\r\n\r\n  onApplyTemplate(template: any, event?: Event) {\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n    this.dashboardService.applyTemplate(template.id);\r\n  }\r\n\r\n  onShare() {\r\n    console.log('Share dashboard');\r\n  }\r\n\r\n  onExport() {\r\n    console.log('Export dashboard');\r\n  }\r\n\r\n  onSaveTemplate() {\r\n    this.showSaveTemplate = true;\r\n  }\r\n\r\n  onCancelSaveTemplate() {\r\n    this.showSaveTemplate = false;\r\n    this.templateName = '';\r\n    this.templateDescription = '';\r\n    this.templateTags = '';\r\n  }\r\n\r\n  onConfirmSaveTemplate() {\r\n    if (this.templateName.trim()) {\r\n      const tags = this.templateTags.split(',').map(tag => tag.trim()).filter(Boolean);\r\n      this.dashboardService.saveAsTemplate(\r\n        this.templateName,\r\n        this.templateDescription,\r\n        tags\r\n      );\r\n      this.onCancelSaveTemplate();\r\n    }\r\n  }\r\n\r\n  onToggleFilters() {\r\n    this.dashboardService.setLeftPanelOpen(!this.leftPanelOpen);\r\n  }\r\n\r\n  getCenterContentClasses(): string {\r\n    const classes = ['center-content'];\r\n    \r\n    if (this.leftPanelOpen) {\r\n      classes.push('with-left-sidebar');\r\n    }\r\n    \r\n    if (this.isConfiguring) {\r\n      classes.push('with-right-sidebar');\r\n    }\r\n    \r\n    return classes.join(' ');\r\n  }\r\n\r\n  trackByTemplateId(index: number, template: any): string {\r\n    return template.id;\r\n  }\r\n}\r\n","import { WidgetConfig, GlobalFilters, PrebuiltTemplate } from './widget.config';\r\n\r\nexport type { WidgetConfig, GlobalFilters, PrebuiltTemplate };\r\n\r\nexport interface DashboardState {\r\n  mode: 'prebuilt' | 'builder' | 'library';\r\n  activeLayout: string[];\r\n  selectedWidget?: WidgetConfig;\r\n  isEditing: boolean;\r\n  leftPanelOpen: boolean;\r\n  showAddWidget: boolean;\r\n  searchQuery: string;\r\n}\r\n\r\nexport interface GridPosition {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n}\r\n\r\nexport interface DashboardTemplate {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  category: string;\r\n  widgets: WidgetConfig[];\r\n  layout: GridLayout;\r\n  filters: GlobalFilters;\r\n  isPublic: boolean;\r\n  createdBy: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  tags: string[];\r\n  thumbnail?: string;\r\n}\r\n\r\nexport interface GridLayout {\r\n  columns: number;\r\n  rows: number;\r\n  breakpoints: {\r\n    lg: number;\r\n    md: number;\r\n    sm: number;\r\n    xs: number;\r\n  };\r\n  margin: [number, number];\r\n  containerPadding: [number, number];\r\n}\r\n\r\nexport interface DashboardConfig {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  layout: GridLayout;\r\n  widgets: WidgetConfig[];\r\n  filters: GlobalFilters;\r\n  theme: 'light' | 'dark';\r\n  autoRefresh: boolean;\r\n  refreshInterval: number;\r\n  permissions: {\r\n    canEdit: string[];\r\n    canView: string[];\r\n    canShare: string[];\r\n  };\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  createdBy: string;\r\n  version: number;\r\n}\r\n\r\nexport interface WidgetPosition {\r\n  widgetId: string;\r\n  position: GridPosition;\r\n  zIndex: number;\r\n  visible: boolean;\r\n}\r\n\r\nexport interface DashboardSnapshot {\r\n  id: string;\r\n  dashboardId: string;\r\n  name: string;\r\n  description: string;\r\n  widgets: WidgetConfig[];\r\n  layout: GridLayout;\r\n  filters: GlobalFilters;\r\n  createdAt: Date;\r\n  createdBy: string;\r\n  version: number;\r\n}\r\n\r\nexport const DEFAULT_GRID_LAYOUT: GridLayout = {\r\n  columns: 12,\r\n  rows: 8,\r\n  breakpoints: {\r\n    lg: 1200,\r\n    md: 996,\r\n    sm: 768,\r\n    xs: 480\r\n  },\r\n  margin: [16, 16],\r\n  containerPadding: [16, 16]\r\n};\r\n\r\nexport const DEFAULT_FILTERS: GlobalFilters = {\r\n  dateRange: 'MTD',\r\n  businessUnit: 'All',\r\n  riskCategory: 'All',\r\n  severity: 1,\r\n  autoRefresh: true,\r\n  refreshInterval: 60\r\n};\r\n","/*\r\n * Public API Surface of create-widget library\r\n */\r\n\r\nexport * from './lib/create-widget/create-widget.component';\r\n\r\n\r\n/*\r\n * Public API Surface of dashboard-builder library\r\n */\r\n\r\nexport * from './lib/dashboard-builder/components/dashboard-builder/dashboard-builder.component';\r\nexport * from './lib/dashboard-builder/services/dashboard.service';\r\nexport * from './lib/dashboard-builder/services/widget.service';\r\nexport * from './lib/dashboard-builder/services/data.service';\r\nexport * from './lib/dashboard-builder/models/chart.data';\r\nexport * from './lib/dashboard-builder/models/dashboard.layout';\r\nexport * from './lib/dashboard-builder/models/widget.config';\r\nexport * from './lib/dashboard-builder/data/sample-datasets';\r\nexport * from './lib/dashboard-builder/templates/prebuilt-templates';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ChartJS","i3","i8","i9","i1.DashboardService","i2","i1","i4","i5","i6","i7","i10"],"mappings":"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"}